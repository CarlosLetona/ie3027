

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon Feb 10 17:09:45 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	psect	text3,local,class=CODE,merge=1,delta=2
    10                           	psect	intentry,global,class=CODE,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	text6,local,class=CODE,merge=1,delta=2
    14                           	dabs	1,0x7E,2
    15  0000                     
    16                           ; Version 2.10
    17                           ; Generated 31/07/2019 GMT
    18                           ; 
    19                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F887 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     	;# 
    51  0001                     	;# 
    52  0002                     	;# 
    53  0003                     	;# 
    54  0004                     	;# 
    55  0005                     	;# 
    56  0006                     	;# 
    57  0007                     	;# 
    58  0008                     	;# 
    59  0009                     	;# 
    60  000A                     	;# 
    61  000B                     	;# 
    62  000C                     	;# 
    63  000D                     	;# 
    64  000E                     	;# 
    65  000E                     	;# 
    66  000F                     	;# 
    67  0010                     	;# 
    68  0011                     	;# 
    69  0012                     	;# 
    70  0013                     	;# 
    71  0014                     	;# 
    72  0015                     	;# 
    73  0015                     	;# 
    74  0016                     	;# 
    75  0017                     	;# 
    76  0018                     	;# 
    77  0019                     	;# 
    78  001A                     	;# 
    79  001B                     	;# 
    80  001B                     	;# 
    81  001C                     	;# 
    82  001D                     	;# 
    83  001E                     	;# 
    84  001F                     	;# 
    85  0081                     	;# 
    86  0085                     	;# 
    87  0086                     	;# 
    88  0087                     	;# 
    89  0088                     	;# 
    90  0089                     	;# 
    91  008C                     	;# 
    92  008D                     	;# 
    93  008E                     	;# 
    94  008F                     	;# 
    95  0090                     	;# 
    96  0091                     	;# 
    97  0092                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0094                     	;# 
   102  0095                     	;# 
   103  0096                     	;# 
   104  0097                     	;# 
   105  0098                     	;# 
   106  0099                     	;# 
   107  009A                     	;# 
   108  009B                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  009F                     	;# 
   113  0105                     	;# 
   114  0107                     	;# 
   115  0108                     	;# 
   116  0109                     	;# 
   117  010C                     	;# 
   118  010C                     	;# 
   119  010D                     	;# 
   120  010E                     	;# 
   121  010F                     	;# 
   122  0185                     	;# 
   123  0187                     	;# 
   124  0188                     	;# 
   125  0189                     	;# 
   126  018C                     	;# 
   127  018D                     	;# 
   128  0000                     	;# 
   129  0001                     	;# 
   130  0002                     	;# 
   131  0003                     	;# 
   132  0004                     	;# 
   133  0005                     	;# 
   134  0006                     	;# 
   135  0007                     	;# 
   136  0008                     	;# 
   137  0009                     	;# 
   138  000A                     	;# 
   139  000B                     	;# 
   140  000C                     	;# 
   141  000D                     	;# 
   142  000E                     	;# 
   143  000E                     	;# 
   144  000F                     	;# 
   145  0010                     	;# 
   146  0011                     	;# 
   147  0012                     	;# 
   148  0013                     	;# 
   149  0014                     	;# 
   150  0015                     	;# 
   151  0015                     	;# 
   152  0016                     	;# 
   153  0017                     	;# 
   154  0018                     	;# 
   155  0019                     	;# 
   156  001A                     	;# 
   157  001B                     	;# 
   158  001B                     	;# 
   159  001C                     	;# 
   160  001D                     	;# 
   161  001E                     	;# 
   162  001F                     	;# 
   163  0081                     	;# 
   164  0085                     	;# 
   165  0086                     	;# 
   166  0087                     	;# 
   167  0088                     	;# 
   168  0089                     	;# 
   169  008C                     	;# 
   170  008D                     	;# 
   171  008E                     	;# 
   172  008F                     	;# 
   173  0090                     	;# 
   174  0091                     	;# 
   175  0092                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0094                     	;# 
   180  0095                     	;# 
   181  0096                     	;# 
   182  0097                     	;# 
   183  0098                     	;# 
   184  0099                     	;# 
   185  009A                     	;# 
   186  009B                     	;# 
   187  009C                     	;# 
   188  009D                     	;# 
   189  009E                     	;# 
   190  009F                     	;# 
   191  0105                     	;# 
   192  0107                     	;# 
   193  0108                     	;# 
   194  0109                     	;# 
   195  010C                     	;# 
   196  010C                     	;# 
   197  010D                     	;# 
   198  010E                     	;# 
   199  010F                     	;# 
   200  0185                     	;# 
   201  0187                     	;# 
   202  0188                     	;# 
   203  0189                     	;# 
   204  018C                     	;# 
   205  018D                     	;# 
   206  0000                     	;# 
   207  0001                     	;# 
   208  0002                     	;# 
   209  0003                     	;# 
   210  0004                     	;# 
   211  0005                     	;# 
   212  0006                     	;# 
   213  0007                     	;# 
   214  0008                     	;# 
   215  0009                     	;# 
   216  000A                     	;# 
   217  000B                     	;# 
   218  000C                     	;# 
   219  000D                     	;# 
   220  000E                     	;# 
   221  000E                     	;# 
   222  000F                     	;# 
   223  0010                     	;# 
   224  0011                     	;# 
   225  0012                     	;# 
   226  0013                     	;# 
   227  0014                     	;# 
   228  0015                     	;# 
   229  0015                     	;# 
   230  0016                     	;# 
   231  0017                     	;# 
   232  0018                     	;# 
   233  0019                     	;# 
   234  001A                     	;# 
   235  001B                     	;# 
   236  001B                     	;# 
   237  001C                     	;# 
   238  001D                     	;# 
   239  001E                     	;# 
   240  001F                     	;# 
   241  0081                     	;# 
   242  0085                     	;# 
   243  0086                     	;# 
   244  0087                     	;# 
   245  0088                     	;# 
   246  0089                     	;# 
   247  008C                     	;# 
   248  008D                     	;# 
   249  008E                     	;# 
   250  008F                     	;# 
   251  0090                     	;# 
   252  0091                     	;# 
   253  0092                     	;# 
   254  0093                     	;# 
   255  0093                     	;# 
   256  0093                     	;# 
   257  0094                     	;# 
   258  0095                     	;# 
   259  0096                     	;# 
   260  0097                     	;# 
   261  0098                     	;# 
   262  0099                     	;# 
   263  009A                     	;# 
   264  009B                     	;# 
   265  009C                     	;# 
   266  009D                     	;# 
   267  009E                     	;# 
   268  009F                     	;# 
   269  0105                     	;# 
   270  0107                     	;# 
   271  0108                     	;# 
   272  0109                     	;# 
   273  010C                     	;# 
   274  010C                     	;# 
   275  010D                     	;# 
   276  010E                     	;# 
   277  010F                     	;# 
   278  0185                     	;# 
   279  0187                     	;# 
   280  0188                     	;# 
   281  0189                     	;# 
   282  018C                     	;# 
   283  018D                     	;# 
   284  0013                     _SSPBUF	set	19
   285  0014                     _SSPCON	set	20
   286  000C                     _PIR1bits	set	12
   287  000B                     _INTCONbits	set	11
   288  0006                     _PORTB	set	6
   289  0008                     _PORTD	set	8
   290  0063                     _SSPIF	set	99
   291  0094                     _SSPSTATbits	set	148
   292  0094                     _SSPSTAT	set	148
   293  0085                     _TRISAbits	set	133
   294  008C                     _PIE1bits	set	140
   295  0088                     _TRISD	set	136
   296  0086                     _TRISB	set	134
   297  043B                     _TRISC3	set	1083
   298  043D                     _TRISC5	set	1085
   299  0189                     _ANSELH	set	393
   300  0188                     _ANSEL	set	392
   301                           
   302                           ; #config settings
   303  0000                     
   304                           	psect	cinit
   305  000F                     start_initialization:	
   306  000F                     __initialization:	
   307  000F                     end_of_initialization:	
   308                           ;End of C runtime variable initialization code
   309                           
   310  000F                     __end_of__initialization:	
   311  000F  0183               	clrf	3
   312  0010  120A  118A  284E   	ljmp	_main	;jump to C main() function
   313                           
   314                           	psect	cstackCOMMON
   315  0070                     __pcstackCOMMON:	
   316  0070                     ?_spiRead:	
   317  0070                     ??_spiRead:	
   318                           ; 1 bytes @ 0x0
   319                           
   320  0070                     ?_spiWrite:	
   321                           ; 1 bytes @ 0x0
   322                           
   323  0070                     ??_spiWrite:	
   324                           ; 1 bytes @ 0x0
   325                           
   326  0070                     ?_setup:	
   327                           ; 1 bytes @ 0x0
   328                           
   329  0070                     ?_isr:	
   330                           ; 1 bytes @ 0x0
   331                           
   332  0070                     ?_main:	
   333                           ; 1 bytes @ 0x0
   334                           
   335  0070                     ?_spiReceiveWait:	
   336                           ; 1 bytes @ 0x0
   337                           
   338  0070                     ??_spiReceiveWait:	
   339                           ; 1 bytes @ 0x0
   340                           
   341  0070                     spiWrite@dat:	
   342                           ; 1 bytes @ 0x0
   343                           
   344                           
   345                           ; 1 bytes @ 0x0
   346  0070                     	ds	1
   347  0071                     ??_isr:	
   348                           
   349                           ; 1 bytes @ 0x1
   350  0071                     	ds	2
   351  0073                     ?_spiInit:	
   352  0073                     spiInit@sDataSample:	
   353                           ; 1 bytes @ 0x3
   354                           
   355                           
   356                           ; 1 bytes @ 0x3
   357  0073                     	ds	1
   358  0074                     spiInit@sClockIdle:	
   359                           
   360                           ; 1 bytes @ 0x4
   361  0074                     	ds	1
   362  0075                     spiInit@sTransmitEdge:	
   363                           
   364                           ; 1 bytes @ 0x5
   365  0075                     	ds	1
   366  0076                     ??_spiInit:	
   367  0076                     spiInit@sType:	
   368                           ; 1 bytes @ 0x6
   369                           
   370                           
   371                           ; 1 bytes @ 0x6
   372  0076                     	ds	1
   373  0077                     ??_setup:	
   374  0077                     ??_main:	
   375                           ; 1 bytes @ 0x7
   376                           
   377                           
   378                           ; 1 bytes @ 0x7
   379  0077                     	ds	3
   380                           
   381                           	psect	maintext
   382  004E                     __pmaintext:	
   383 ;;
   384 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   385 ;;
   386 ;; *************** function _main *****************
   387 ;; Defined at:
   388 ;;		line 60 in file "main.c"
   389 ;; Parameters:    Size  Location     Type
   390 ;;		None
   391 ;; Auto vars:     Size  Location     Type
   392 ;;		None
   393 ;; Return value:  Size  Location     Type
   394 ;;                  1    wreg      void 
   395 ;; Registers used:
   396 ;;		wreg, status,2, status,0, pclath, cstack
   397 ;; Tracked objects:
   398 ;;		On entry : B00/0
   399 ;;		On exit  : 0/0
   400 ;;		Unchanged: 0/0
   401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   402 ;;      Params:         0       0       0       0       0
   403 ;;      Locals:         0       0       0       0       0
   404 ;;      Temps:          3       0       0       0       0
   405 ;;      Totals:         3       0       0       0       0
   406 ;;Total ram usage:        3 bytes
   407 ;; Hardware stack levels required when called:    5
   408 ;; This function calls:
   409 ;;		_setup
   410 ;; This function is called by:
   411 ;;		Startup code after reset
   412 ;; This function uses a non-reentrant model
   413 ;;
   414                           
   415                           
   416                           ;psect for function _main
   417  004E                     _main:	
   418  004E                     l751:	
   419                           ;incstack = 0
   420                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   421                           
   422                           
   423                           ;main.c: 61:     setup();
   424  004E  120A  118A  2031  120A  118A  	fcall	_setup
   425  0053                     l753:	
   426                           
   427                           ;main.c: 66:        PORTB--;
   428  0053  3001               	movlw	1
   429  0054  1283               	bcf	3,5	;RP0=0, select bank0
   430  0055  1303               	bcf	3,6	;RP1=0, select bank0
   431  0056  0286               	subwf	6,f	;volatile
   432  0057                     l755:	
   433                           
   434                           ;main.c: 67:        _delay((unsigned long)((250)*(8000000/4000.0)));
   435  0057  3003               	movlw	3
   436  0058  00F9               	movwf	??_main+2
   437  0059  308A               	movlw	138
   438  005A  00F8               	movwf	??_main+1
   439  005B  3055               	movlw	85
   440  005C  00F7               	movwf	??_main
   441  005D                     u57:	
   442  005D  0BF7               	decfsz	??_main,f
   443  005E  285D               	goto	u57
   444  005F  0BF8               	decfsz	??_main+1,f
   445  0060  285D               	goto	u57
   446  0061  0BF9               	decfsz	??_main+2,f
   447  0062  285D               	goto	u57
   448  0063  2864               	nop2
   449  0064  2853               	goto	l753
   450  0065  120A  118A  280C   	ljmp	start
   451  0068                     __end_of_main:	
   452                           
   453                           	psect	text1
   454  0031                     __ptext1:	
   455 ;; *************** function _setup *****************
   456 ;; Defined at:
   457 ;;		line 74 in file "main.c"
   458 ;; Parameters:    Size  Location     Type
   459 ;;		None
   460 ;; Auto vars:     Size  Location     Type
   461 ;;		None
   462 ;; Return value:  Size  Location     Type
   463 ;;                  1    wreg      void 
   464 ;; Registers used:
   465 ;;		wreg, status,2, status,0, pclath, cstack
   466 ;; Tracked objects:
   467 ;;		On entry : 0/0
   468 ;;		On exit  : 0/0
   469 ;;		Unchanged: 0/0
   470 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   471 ;;      Params:         0       0       0       0       0
   472 ;;      Locals:         0       0       0       0       0
   473 ;;      Temps:          0       0       0       0       0
   474 ;;      Totals:         0       0       0       0       0
   475 ;;Total ram usage:        0 bytes
   476 ;; Hardware stack levels used:    1
   477 ;; Hardware stack levels required when called:    4
   478 ;; This function calls:
   479 ;;		_spiInit
   480 ;; This function is called by:
   481 ;;		_main
   482 ;; This function uses a non-reentrant model
   483 ;;
   484                           
   485                           
   486                           ;psect for function _setup
   487  0031                     _setup:	
   488  0031                     l737:	
   489                           ;incstack = 0
   490                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   491                           
   492                           
   493                           ;main.c: 75:     ANSEL = 0;
   494  0031  1683               	bsf	3,5	;RP0=1, select bank3
   495  0032  1703               	bsf	3,6	;RP1=1, select bank3
   496  0033  0188               	clrf	8	;volatile
   497                           
   498                           ;main.c: 76:     ANSELH = 0;
   499  0034  0189               	clrf	9	;volatile
   500                           
   501                           ;main.c: 78:     TRISB = 0;
   502  0035  1683               	bsf	3,5	;RP0=1, select bank1
   503  0036  1303               	bcf	3,6	;RP1=0, select bank1
   504  0037  0186               	clrf	6	;volatile
   505                           
   506                           ;main.c: 79:     TRISD = 0;
   507  0038  0188               	clrf	8	;volatile
   508                           
   509                           ;main.c: 81:     PORTB = 0;
   510  0039  1283               	bcf	3,5	;RP0=0, select bank0
   511  003A  1303               	bcf	3,6	;RP1=0, select bank0
   512  003B  0186               	clrf	6	;volatile
   513                           
   514                           ;main.c: 82:     PORTD = 0;
   515  003C  0188               	clrf	8	;volatile
   516  003D                     l739:	
   517                           
   518                           ;main.c: 84:     INTCONbits.GIE = 1;
   519  003D  178B               	bsf	11,7	;volatile
   520  003E                     l741:	
   521                           
   522                           ;main.c: 85:     INTCONbits.PEIE = 1;
   523  003E  170B               	bsf	11,6	;volatile
   524  003F                     l743:	
   525                           
   526                           ;main.c: 86:     PIR1bits.SSPIF = 0;
   527  003F  118C               	bcf	12,3	;volatile
   528  0040                     l745:	
   529                           
   530                           ;main.c: 87:     PIE1bits.SSPIE = 1;
   531  0040  1683               	bsf	3,5	;RP0=1, select bank1
   532  0041  1303               	bcf	3,6	;RP1=0, select bank1
   533  0042  158C               	bsf	12,3	;volatile
   534  0043                     l747:	
   535                           
   536                           ;main.c: 88:     TRISAbits.TRISA5 = 1;
   537  0043  1685               	bsf	5,5	;volatile
   538  0044                     l749:	
   539                           
   540                           ;main.c: 90:     spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW, SP
      +                          I_IDLE_2_ACTIVE);
   541  0044  01F3               	clrf	spiInit@sDataSample
   542  0045  01F4               	clrf	spiInit@sClockIdle
   543  0046  01F5               	clrf	spiInit@sTransmitEdge
   544  0047  3024               	movlw	36
   545  0048  120A  118A  2068  120A  118A  	fcall	_spiInit
   546  004D                     l49:	
   547  004D  0008               	return
   548  004E                     __end_of_setup:	
   549                           
   550                           	psect	text2
   551  0068                     __ptext2:	
   552 ;; *************** function _spiInit *****************
   553 ;; Defined at:
   554 ;;		line 12 in file "SPI.c"
   555 ;; Parameters:    Size  Location     Type
   556 ;;  sType           1    wreg     enum E1264
   557 ;;  sDataSample     1    3[COMMON] enum E1272
   558 ;;  sClockIdle      1    4[COMMON] enum E1276
   559 ;;  sTransmitEdg    1    5[COMMON] enum E1280
   560 ;; Auto vars:     Size  Location     Type
   561 ;;  sType           1    6[COMMON] enum E1264
   562 ;; Return value:  Size  Location     Type
   563 ;;                  1    wreg      void 
   564 ;; Registers used:
   565 ;;		wreg, status,2, status,0
   566 ;; Tracked objects:
   567 ;;		On entry : 0/0
   568 ;;		On exit  : 0/0
   569 ;;		Unchanged: 0/0
   570 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   571 ;;      Params:         3       0       0       0       0
   572 ;;      Locals:         1       0       0       0       0
   573 ;;      Temps:          0       0       0       0       0
   574 ;;      Totals:         4       0       0       0       0
   575 ;;Total ram usage:        4 bytes
   576 ;; Hardware stack levels used:    1
   577 ;; Hardware stack levels required when called:    3
   578 ;; This function calls:
   579 ;;		Nothing
   580 ;; This function is called by:
   581 ;;		_setup
   582 ;; This function uses a non-reentrant model
   583 ;;
   584                           
   585                           
   586                           ;psect for function _spiInit
   587  0068                     _spiInit:	
   588                           
   589                           ;incstack = 0
   590                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   591                           ;spiInit@sType stored from wreg
   592  0068  00F6               	movwf	spiInit@sType
   593  0069                     l727:	
   594                           
   595                           ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 13: {;SPI.c: 14:     TRISC5 = 0;
   596  0069  1683               	bsf	3,5	;RP0=1, select bank1
   597  006A  1303               	bcf	3,6	;RP1=0, select bank1
   598  006B  1287               	bcf	7,5	;volatile
   599                           
   600                           ;SPI.c: 15:     if(sType & 0b00000100)
   601  006C  1D76               	btfss	spiInit@sType,2
   602  006D  286F               	goto	u41
   603  006E  2870               	goto	u40
   604  006F                     u41:	
   605  006F  2874               	goto	l733
   606  0070                     u40:	
   607  0070                     l729:	
   608                           
   609                           ;SPI.c: 16:     {;SPI.c: 17:         SSPSTAT = sTransmitEdge;
   610  0070  0875               	movf	spiInit@sTransmitEdge,w
   611  0071  0094               	movwf	20	;volatile
   612  0072                     l731:	
   613                           
   614                           ;SPI.c: 18:         TRISC3 = 1;
   615  0072  1587               	bsf	7,3	;volatile
   616                           
   617                           ;SPI.c: 19:     }
   618  0073  2878               	goto	l65
   619  0074                     l733:	
   620                           
   621                           ;SPI.c: 21:     {;SPI.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
   622  0074  0873               	movf	spiInit@sDataSample,w
   623  0075  0475               	iorwf	spiInit@sTransmitEdge,w
   624  0076  0094               	movwf	20	;volatile
   625  0077                     l735:	
   626                           
   627                           ;SPI.c: 23:         TRISC3 = 0;
   628  0077  1187               	bcf	7,3	;volatile
   629  0078                     l65:	
   630                           ;SPI.c: 24:     }
   631                           
   632                           
   633                           ;SPI.c: 26:     SSPCON = sType | sClockIdle;
   634  0078  0876               	movf	spiInit@sType,w
   635  0079  0474               	iorwf	spiInit@sClockIdle,w
   636  007A  1283               	bcf	3,5	;RP0=0, select bank0
   637  007B  1303               	bcf	3,6	;RP1=0, select bank0
   638  007C  0094               	movwf	20	;volatile
   639  007D                     l66:	
   640  007D  0008               	return
   641  007E                     __end_of_spiInit:	
   642                           
   643                           	psect	text3
   644  0013                     __ptext3:	
   645 ;; *************** function _isr *****************
   646 ;; Defined at:
   647 ;;		line 50 in file "main.c"
   648 ;; Parameters:    Size  Location     Type
   649 ;;		None
   650 ;; Auto vars:     Size  Location     Type
   651 ;;		None
   652 ;; Return value:  Size  Location     Type
   653 ;;                  1    wreg      void 
   654 ;; Registers used:
   655 ;;		wreg, status,2, status,0, pclath, cstack
   656 ;; Tracked objects:
   657 ;;		On entry : 0/0
   658 ;;		On exit  : 0/0
   659 ;;		Unchanged: 0/0
   660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   661 ;;      Params:         0       0       0       0       0
   662 ;;      Locals:         0       0       0       0       0
   663 ;;      Temps:          2       0       0       0       0
   664 ;;      Totals:         2       0       0       0       0
   665 ;;Total ram usage:        2 bytes
   666 ;; Hardware stack levels used:    1
   667 ;; Hardware stack levels required when called:    2
   668 ;; This function calls:
   669 ;;		_spiRead
   670 ;;		_spiWrite
   671 ;; This function is called by:
   672 ;;		Interrupt level 1
   673 ;; This function uses a non-reentrant model
   674 ;;
   675                           
   676                           
   677                           ;psect for function _isr
   678  0013                     _isr:	
   679  0013                     i1l709:	
   680                           
   681                           ;main.c: 51:    if(SSPIF == 1){
   682  0013  1283               	bcf	3,5	;RP0=0, select bank0
   683  0014  1303               	bcf	3,6	;RP1=0, select bank0
   684  0015  1D8C               	btfss	12,3	;volatile
   685  0016  2818               	goto	u3_21
   686  0017  2819               	goto	u3_20
   687  0018                     u3_21:	
   688  0018  282A               	goto	i1l38
   689  0019                     u3_20:	
   690  0019                     i1l711:	
   691                           
   692                           ;main.c: 52:         PORTD = spiRead();
   693  0019  120A  118A  207E  120A  118A  	fcall	_spiRead
   694  001E  1283               	bcf	3,5	;RP0=0, select bank0
   695  001F  1303               	bcf	3,6	;RP1=0, select bank0
   696  0020  0088               	movwf	8	;volatile
   697                           
   698                           ;main.c: 53:         spiWrite(PORTB);
   699  0021  0806               	movf	6,w	;volatile
   700  0022  120A  118A  208E  120A  118A  	fcall	_spiWrite
   701  0027                     i1l713:	
   702                           
   703                           ;main.c: 54:         SSPIF = 0;
   704  0027  1283               	bcf	3,5	;RP0=0, select bank0
   705  0028  1303               	bcf	3,6	;RP1=0, select bank0
   706  0029  118C               	bcf	12,3	;volatile
   707  002A                     i1l38:	
   708  002A  0872               	movf	??_isr+1,w
   709  002B  008A               	movwf	10
   710  002C  0E71               	swapf	??_isr^(0+4294967168),w
   711  002D  0083               	movwf	3
   712  002E  0EFE               	swapf	btemp,f
   713  002F  0E7E               	swapf	btemp,w
   714  0030  0009               	retfie
   715  0031                     __end_of_isr:	
   716                           
   717                           	psect	intentry
   718  0004                     __pintentry:	
   719                           ;incstack = 0
   720                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
   721                           
   722  0004                     interrupt_function:	
   723  007E                     saved_w	set	btemp
   724  0004  00FE               	movwf	btemp
   725  0005  0E03               	swapf	3,w
   726  0006  00F1               	movwf	??_isr
   727  0007  080A               	movf	10,w
   728  0008  00F2               	movwf	??_isr+1
   729  0009  120A  118A  2813   	ljmp	_isr
   730                           
   731                           	psect	text4
   732  008E                     __ptext4:	
   733 ;; *************** function _spiWrite *****************
   734 ;; Defined at:
   735 ;;		line 34 in file "SPI.c"
   736 ;; Parameters:    Size  Location     Type
   737 ;;  dat             1    wreg     unsigned char 
   738 ;; Auto vars:     Size  Location     Type
   739 ;;  dat             1    0[COMMON] unsigned char 
   740 ;; Return value:  Size  Location     Type
   741 ;;                  1    wreg      void 
   742 ;; Registers used:
   743 ;;		wreg
   744 ;; Tracked objects:
   745 ;;		On entry : 0/0
   746 ;;		On exit  : 0/0
   747 ;;		Unchanged: 0/0
   748 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   749 ;;      Params:         0       0       0       0       0
   750 ;;      Locals:         1       0       0       0       0
   751 ;;      Temps:          0       0       0       0       0
   752 ;;      Totals:         1       0       0       0       0
   753 ;;Total ram usage:        1 bytes
   754 ;; Hardware stack levels used:    1
   755 ;; This function calls:
   756 ;;		Nothing
   757 ;; This function is called by:
   758 ;;		_isr
   759 ;; This function uses a non-reentrant model
   760 ;;
   761                           
   762                           
   763                           ;psect for function _spiWrite
   764  008E                     _spiWrite:	
   765                           
   766                           ;incstack = 0
   767                           ; Regs used in _spiWrite: [wreg]
   768                           ;spiWrite@dat stored from wreg
   769  008E  00F0               	movwf	spiWrite@dat
   770  008F                     i1l693:	
   771                           
   772                           ;SPI.c: 34: void spiWrite(char dat);SPI.c: 35: {;SPI.c: 36:     SSPBUF = dat;
   773  008F  0870               	movf	spiWrite@dat,w
   774  0090  1283               	bcf	3,5	;RP0=0, select bank0
   775  0091  1303               	bcf	3,6	;RP1=0, select bank0
   776  0092  0093               	movwf	19	;volatile
   777  0093                     i1l75:	
   778  0093  0008               	return
   779  0094                     __end_of_spiWrite:	
   780                           
   781                           	psect	text5
   782  007E                     __ptext5:	
   783 ;; *************** function _spiRead *****************
   784 ;; Defined at:
   785 ;;		line 47 in file "SPI.c"
   786 ;; Parameters:    Size  Location     Type
   787 ;;		None
   788 ;; Auto vars:     Size  Location     Type
   789 ;;		None
   790 ;; Return value:  Size  Location     Type
   791 ;;                  1    wreg      unsigned char 
   792 ;; Registers used:
   793 ;;		wreg, status,2, status,0, pclath, cstack
   794 ;; Tracked objects:
   795 ;;		On entry : 0/0
   796 ;;		On exit  : 0/0
   797 ;;		Unchanged: 0/0
   798 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   799 ;;      Params:         0       0       0       0       0
   800 ;;      Locals:         0       0       0       0       0
   801 ;;      Temps:          0       0       0       0       0
   802 ;;      Totals:         0       0       0       0       0
   803 ;;Total ram usage:        0 bytes
   804 ;; Hardware stack levels used:    1
   805 ;; Hardware stack levels required when called:    1
   806 ;; This function calls:
   807 ;;		_spiReceiveWait
   808 ;; This function is called by:
   809 ;;		_isr
   810 ;; This function uses a non-reentrant model
   811 ;;
   812                           
   813                           
   814                           ;psect for function _spiRead
   815  007E                     _spiRead:	
   816  007E                     i1l687:	
   817                           ;incstack = 0
   818                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
   819                           
   820                           
   821                           ;SPI.c: 49:     spiReceiveWait();
   822  007E  120A  118A  2087  120A  118A  	fcall	_spiReceiveWait
   823  0083                     i1l689:	
   824                           
   825                           ;SPI.c: 50:     return(SSPBUF);
   826  0083  1283               	bcf	3,5	;RP0=0, select bank0
   827  0084  1303               	bcf	3,6	;RP1=0, select bank0
   828  0085  0813               	movf	19,w	;volatile
   829  0086                     i1l83:	
   830  0086  0008               	return
   831  0087                     __end_of_spiRead:	
   832                           
   833                           	psect	text6
   834  0087                     __ptext6:	
   835 ;; *************** function _spiReceiveWait *****************
   836 ;; Defined at:
   837 ;;		line 29 in file "SPI.c"
   838 ;; Parameters:    Size  Location     Type
   839 ;;		None
   840 ;; Auto vars:     Size  Location     Type
   841 ;;		None
   842 ;; Return value:  Size  Location     Type
   843 ;;                  1    wreg      void 
   844 ;; Registers used:
   845 ;;		None
   846 ;; Tracked objects:
   847 ;;		On entry : 0/0
   848 ;;		On exit  : 0/0
   849 ;;		Unchanged: 0/0
   850 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   851 ;;      Params:         0       0       0       0       0
   852 ;;      Locals:         0       0       0       0       0
   853 ;;      Temps:          0       0       0       0       0
   854 ;;      Totals:         0       0       0       0       0
   855 ;;Total ram usage:        0 bytes
   856 ;; Hardware stack levels used:    1
   857 ;; This function calls:
   858 ;;		Nothing
   859 ;; This function is called by:
   860 ;;		_spiRead
   861 ;; This function uses a non-reentrant model
   862 ;;
   863                           
   864                           
   865                           ;psect for function _spiReceiveWait
   866  0087                     _spiReceiveWait:	
   867  0087                     i1l685:	
   868                           ;incstack = 0
   869                           ; Regs used in _spiReceiveWait: []
   870                           
   871  0087                     i1l69:	
   872                           ;SPI.c: 31:     while ( !SSPSTATbits.BF );
   873                           
   874  0087  1683               	bsf	3,5	;RP0=1, select bank1
   875  0088  1303               	bcf	3,6	;RP1=0, select bank1
   876  0089  1C14               	btfss	20,0	;volatile
   877  008A  288C               	goto	u2_21
   878  008B  288D               	goto	u2_20
   879  008C                     u2_21:	
   880  008C  2887               	goto	i1l69
   881  008D                     u2_20:	
   882  008D                     i1l72:	
   883  008D  0008               	return
   884  008E                     __end_of_spiReceiveWait:	
   885  007E                     btemp	set	126	;btemp
   886  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      10
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _setup->_spiInit

Critical Paths under _isr in COMMON

    _isr->_spiWrite

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     360
                                              7 COMMON     3     3      0
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     360
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              3 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  2     2      0      15
                                              1 COMMON     2     2      0
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (4) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (5) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup
     _spiInit

 _isr (ROOT)
   _spiRead
     _spiReceiveWait
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon Feb 10 17:09:45 2020

             __CFG_CP$OFF 0000               _SSPSTATbits 0094                        l65 0078  
                      l49 004D                        l66 007D                        u40 0070  
                      u41 006F                        u57 005D                       l731 0072  
                     l733 0074                       l741 003E                       l735 0077  
                     l727 0069                       l743 003F                       l751 004E  
                     l729 0070                       l745 0040                       l737 0031  
                     l753 0053                       l747 0043                       l739 003D  
                     l755 0057                       l749 0044              __CFG_CPD$OFF 0000  
                     _isr 0013              __CFG_LVP$OFF 0000                      ?_isr 0070  
                    i1l38 002A                      i1l72 008D                      i1l83 0086  
                    i1l75 0093                      i1l69 0087                      u2_20 008D  
                    u2_21 008C                      u3_20 0019                      u3_21 0018  
            __CFG_WRT$OFF 0000                      _main 004E                      btemp 007E  
                    start 000C             __CFG_IESO$OFF 0000                     ??_isr 0071  
                   ?_main 0070             __CFG_WDTE$OFF 0000                     _ANSEL 0188  
                   i1l711 0019                     i1l713 0027                     i1l709 0013  
                   i1l685 0087                     i1l693 008F                     i1l687 007E  
                   i1l689 0083                     _PORTB 0006                     _PORTD 0008  
                   _TRISB 0086                     _TRISD 0088                     _SSPIF 0063  
          __CFG_FCMEN$OFF 0000                     _setup 0031            __CFG_BOREN$OFF 0000  
                   pclath 000A           __end_of_spiInit 007E           __end_of_spiRead 0087  
                   status 0003                     wtemp0 007E            __CFG_MCLRE$OFF 0000  
         __initialization 000F              __end_of_main 0068                    ??_main 0077  
                  ?_setup 0070                    _ANSELH 0189                    _TRISC3 043B  
                  _TRISC5 043D                    _SSPCON 0014                    _SSPBUF 0013  
          __CFG_PWRTE$OFF 0000                    saved_w 007E          __end_of_spiWrite 0094  
               ??_spiInit 0076                 ??_spiRead 0070   __end_of__initialization 000F  
          __pcstackCOMMON 0070             __end_of_setup 004E                   ??_setup 0077  
              __pmaintext 004E                __pintentry 0004   __size_of_spiReceiveWait 0007  
                 _SSPSTAT 0094                 ?_spiWrite 0070                   __ptext1 0031  
                 __ptext2 0068                   __ptext3 0013                   __ptext4 008E  
                 __ptext5 007E                   __ptext6 0087              __size_of_isr 001E  
                 _spiInit 0068                   _spiRead 007E      end_of_initialization 000F  
              ??_spiWrite 0070                 _TRISAbits 0085               spiWrite@dat 0070  
          _spiReceiveWait 0087       start_initialization 000F               __end_of_isr 0031  
  __end_of_spiReceiveWait 008E                 ___latbits 0002           ?_spiReceiveWait 0070  
       __size_of_spiWrite 0006                  ?_spiInit 0073                  ?_spiRead 0070  
          __size_of_setup 001D      spiInit@sTransmitEdge 0075         interrupt_function 0004  
                _PIE1bits 008C  __CFG_FOSC$EXTRC_NOCLKOUT 0000        spiInit@sDataSample 0073  
                _PIR1bits 000C          __size_of_spiInit 0016          __size_of_spiRead 0009  
       __CFG_BOR4V$BOR40V 0000             __size_of_main 001A                  _spiWrite 008E  
            spiInit@sType 0076         spiInit@sClockIdle 0074                _INTCONbits 000B  
                intlevel1 0000          ??_spiReceiveWait 0070  
