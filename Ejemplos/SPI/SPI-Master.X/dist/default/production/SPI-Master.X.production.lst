

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon Feb 10 17:02:53 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	psect	text3,local,class=CODE,merge=1,delta=2
    10                           	psect	text4,local,class=CODE,merge=1,delta=2
    11                           	dabs	1,0x7E,2
    12  0000                     
    13                           ; Version 2.10
    14                           ; Generated 31/07/2019 GMT
    15                           ; 
    16                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC16F887 Definitions
    45                           ; 
    46                           ; SFR Addresses
    47  0000                     	;# 
    48  0001                     	;# 
    49  0002                     	;# 
    50  0003                     	;# 
    51  0004                     	;# 
    52  0005                     	;# 
    53  0006                     	;# 
    54  0007                     	;# 
    55  0008                     	;# 
    56  0009                     	;# 
    57  000A                     	;# 
    58  000B                     	;# 
    59  000C                     	;# 
    60  000D                     	;# 
    61  000E                     	;# 
    62  000E                     	;# 
    63  000F                     	;# 
    64  0010                     	;# 
    65  0011                     	;# 
    66  0012                     	;# 
    67  0013                     	;# 
    68  0014                     	;# 
    69  0015                     	;# 
    70  0015                     	;# 
    71  0016                     	;# 
    72  0017                     	;# 
    73  0018                     	;# 
    74  0019                     	;# 
    75  001A                     	;# 
    76  001B                     	;# 
    77  001B                     	;# 
    78  001C                     	;# 
    79  001D                     	;# 
    80  001E                     	;# 
    81  001F                     	;# 
    82  0081                     	;# 
    83  0085                     	;# 
    84  0086                     	;# 
    85  0087                     	;# 
    86  0088                     	;# 
    87  0089                     	;# 
    88  008C                     	;# 
    89  008D                     	;# 
    90  008E                     	;# 
    91  008F                     	;# 
    92  0090                     	;# 
    93  0091                     	;# 
    94  0092                     	;# 
    95  0093                     	;# 
    96  0093                     	;# 
    97  0093                     	;# 
    98  0094                     	;# 
    99  0095                     	;# 
   100  0096                     	;# 
   101  0097                     	;# 
   102  0098                     	;# 
   103  0099                     	;# 
   104  009A                     	;# 
   105  009B                     	;# 
   106  009C                     	;# 
   107  009D                     	;# 
   108  009E                     	;# 
   109  009F                     	;# 
   110  0105                     	;# 
   111  0107                     	;# 
   112  0108                     	;# 
   113  0109                     	;# 
   114  010C                     	;# 
   115  010C                     	;# 
   116  010D                     	;# 
   117  010E                     	;# 
   118  010F                     	;# 
   119  0185                     	;# 
   120  0187                     	;# 
   121  0188                     	;# 
   122  0189                     	;# 
   123  018C                     	;# 
   124  018D                     	;# 
   125  0000                     	;# 
   126  0001                     	;# 
   127  0002                     	;# 
   128  0003                     	;# 
   129  0004                     	;# 
   130  0005                     	;# 
   131  0006                     	;# 
   132  0007                     	;# 
   133  0008                     	;# 
   134  0009                     	;# 
   135  000A                     	;# 
   136  000B                     	;# 
   137  000C                     	;# 
   138  000D                     	;# 
   139  000E                     	;# 
   140  000E                     	;# 
   141  000F                     	;# 
   142  0010                     	;# 
   143  0011                     	;# 
   144  0012                     	;# 
   145  0013                     	;# 
   146  0014                     	;# 
   147  0015                     	;# 
   148  0015                     	;# 
   149  0016                     	;# 
   150  0017                     	;# 
   151  0018                     	;# 
   152  0019                     	;# 
   153  001A                     	;# 
   154  001B                     	;# 
   155  001B                     	;# 
   156  001C                     	;# 
   157  001D                     	;# 
   158  001E                     	;# 
   159  001F                     	;# 
   160  0081                     	;# 
   161  0085                     	;# 
   162  0086                     	;# 
   163  0087                     	;# 
   164  0088                     	;# 
   165  0089                     	;# 
   166  008C                     	;# 
   167  008D                     	;# 
   168  008E                     	;# 
   169  008F                     	;# 
   170  0090                     	;# 
   171  0091                     	;# 
   172  0092                     	;# 
   173  0093                     	;# 
   174  0093                     	;# 
   175  0093                     	;# 
   176  0094                     	;# 
   177  0095                     	;# 
   178  0096                     	;# 
   179  0097                     	;# 
   180  0098                     	;# 
   181  0099                     	;# 
   182  009A                     	;# 
   183  009B                     	;# 
   184  009C                     	;# 
   185  009D                     	;# 
   186  009E                     	;# 
   187  009F                     	;# 
   188  0105                     	;# 
   189  0107                     	;# 
   190  0108                     	;# 
   191  0109                     	;# 
   192  010C                     	;# 
   193  010C                     	;# 
   194  010D                     	;# 
   195  010E                     	;# 
   196  010F                     	;# 
   197  0185                     	;# 
   198  0187                     	;# 
   199  0188                     	;# 
   200  0189                     	;# 
   201  018C                     	;# 
   202  018D                     	;# 
   203  0000                     	;# 
   204  0001                     	;# 
   205  0002                     	;# 
   206  0003                     	;# 
   207  0004                     	;# 
   208  0005                     	;# 
   209  0006                     	;# 
   210  0007                     	;# 
   211  0008                     	;# 
   212  0009                     	;# 
   213  000A                     	;# 
   214  000B                     	;# 
   215  000C                     	;# 
   216  000D                     	;# 
   217  000E                     	;# 
   218  000E                     	;# 
   219  000F                     	;# 
   220  0010                     	;# 
   221  0011                     	;# 
   222  0012                     	;# 
   223  0013                     	;# 
   224  0014                     	;# 
   225  0015                     	;# 
   226  0015                     	;# 
   227  0016                     	;# 
   228  0017                     	;# 
   229  0018                     	;# 
   230  0019                     	;# 
   231  001A                     	;# 
   232  001B                     	;# 
   233  001B                     	;# 
   234  001C                     	;# 
   235  001D                     	;# 
   236  001E                     	;# 
   237  001F                     	;# 
   238  0081                     	;# 
   239  0085                     	;# 
   240  0086                     	;# 
   241  0087                     	;# 
   242  0088                     	;# 
   243  0089                     	;# 
   244  008C                     	;# 
   245  008D                     	;# 
   246  008E                     	;# 
   247  008F                     	;# 
   248  0090                     	;# 
   249  0091                     	;# 
   250  0092                     	;# 
   251  0093                     	;# 
   252  0093                     	;# 
   253  0093                     	;# 
   254  0094                     	;# 
   255  0095                     	;# 
   256  0096                     	;# 
   257  0097                     	;# 
   258  0098                     	;# 
   259  0099                     	;# 
   260  009A                     	;# 
   261  009B                     	;# 
   262  009C                     	;# 
   263  009D                     	;# 
   264  009E                     	;# 
   265  009F                     	;# 
   266  0105                     	;# 
   267  0107                     	;# 
   268  0108                     	;# 
   269  0109                     	;# 
   270  010C                     	;# 
   271  010C                     	;# 
   272  010D                     	;# 
   273  010E                     	;# 
   274  010F                     	;# 
   275  0185                     	;# 
   276  0187                     	;# 
   277  0188                     	;# 
   278  0189                     	;# 
   279  018C                     	;# 
   280  018D                     	;# 
   281  0013                     _SSPBUF	set	19
   282  0014                     _SSPCON	set	20
   283  0008                     _PORTD	set	8
   284  0006                     _PORTB	set	6
   285  003A                     _RC2	set	58
   286  0094                     _SSPSTATbits	set	148
   287  0094                     _SSPSTAT	set	148
   288  0088                     _TRISD	set	136
   289  0086                     _TRISB	set	134
   290  043B                     _TRISC3	set	1083
   291  043D                     _TRISC5	set	1085
   292  043A                     _TRISC2	set	1082
   293  0189                     _ANSELH	set	393
   294  0188                     _ANSEL	set	392
   295                           
   296                           ; #config settings
   297  0000                     
   298                           	psect	cinit
   299  07FC                     start_initialization:	
   300  07FC                     __initialization:	
   301  07FC                     end_of_initialization:	
   302                           ;End of C runtime variable initialization code
   303                           
   304  07FC                     __end_of__initialization:	
   305  07FC  0183               	clrf	3
   306  07FD  120A  118A  2FA6   	ljmp	_main	;jump to C main() function
   307                           
   308                           	psect	cstackCOMMON
   309  0070                     __pcstackCOMMON:	
   310  0070                     ?_spiInit:	
   311  0070                     ?_spiWrite:	
   312                           ; 1 bytes @ 0x0
   313                           
   314  0070                     ??_spiWrite:	
   315                           ; 1 bytes @ 0x0
   316                           
   317  0070                     ?_spiRead:	
   318                           ; 1 bytes @ 0x0
   319                           
   320  0070                     ??_spiRead:	
   321                           ; 1 bytes @ 0x0
   322                           
   323  0070                     ?_main:	
   324                           ; 1 bytes @ 0x0
   325                           
   326  0070                     ?_spiReceiveWait:	
   327                           ; 1 bytes @ 0x0
   328                           
   329  0070                     ??_spiReceiveWait:	
   330                           ; 1 bytes @ 0x0
   331                           
   332  0070                     spiInit@sDataSample:	
   333                           ; 1 bytes @ 0x0
   334                           
   335  0070                     spiWrite@dat:	
   336                           ; 1 bytes @ 0x0
   337                           
   338                           
   339                           ; 1 bytes @ 0x0
   340  0070                     	ds	1
   341  0071                     spiInit@sClockIdle:	
   342                           
   343                           ; 1 bytes @ 0x1
   344  0071                     	ds	1
   345  0072                     spiInit@sTransmitEdge:	
   346                           
   347                           ; 1 bytes @ 0x2
   348  0072                     	ds	1
   349  0073                     ??_spiInit:	
   350  0073                     spiInit@sType:	
   351                           ; 1 bytes @ 0x3
   352                           
   353                           
   354                           ; 1 bytes @ 0x3
   355  0073                     	ds	1
   356  0074                     ??_main:	
   357                           
   358                           ; 1 bytes @ 0x4
   359  0074                     	ds	3
   360                           
   361                           	psect	maintext
   362  07A6                     __pmaintext:	
   363 ;;
   364 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   365 ;;
   366 ;; *************** function _main *****************
   367 ;; Defined at:
   368 ;;		line 43 in file "main.c"
   369 ;; Parameters:    Size  Location     Type
   370 ;;		None
   371 ;; Auto vars:     Size  Location     Type
   372 ;;		None
   373 ;; Return value:  Size  Location     Type
   374 ;;                  1    wreg      void 
   375 ;; Registers used:
   376 ;;		wreg, status,2, status,0, pclath, cstack
   377 ;; Tracked objects:
   378 ;;		On entry : B00/0
   379 ;;		On exit  : 0/0
   380 ;;		Unchanged: 0/0
   381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   382 ;;      Params:         0       0       0       0       0
   383 ;;      Locals:         0       0       0       0       0
   384 ;;      Temps:          3       0       0       0       0
   385 ;;      Totals:         3       0       0       0       0
   386 ;;Total ram usage:        3 bytes
   387 ;; Hardware stack levels required when called:    2
   388 ;; This function calls:
   389 ;;		_spiInit
   390 ;;		_spiRead
   391 ;;		_spiWrite
   392 ;; This function is called by:
   393 ;;		Startup code after reset
   394 ;; This function uses a non-reentrant model
   395 ;;
   396                           
   397                           
   398                           ;psect for function _main
   399  07A6                     _main:	
   400  07A6                     l718:	
   401                           ;incstack = 0
   402                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   403                           
   404                           
   405                           ;main.c: 44:     ANSEL = 0;
   406  07A6  1683               	bsf	3,5	;RP0=1, select bank3
   407  07A7  1703               	bsf	3,6	;RP1=1, select bank3
   408  07A8  0188               	clrf	8	;volatile
   409                           
   410                           ;main.c: 45:     ANSELH = 0;
   411  07A9  0189               	clrf	9	;volatile
   412  07AA                     l720:	
   413                           
   414                           ;main.c: 46:     TRISC2 = 0;
   415  07AA  1683               	bsf	3,5	;RP0=1, select bank1
   416  07AB  1303               	bcf	3,6	;RP1=0, select bank1
   417  07AC  1107               	bcf	7,2	;volatile
   418                           
   419                           ;main.c: 47:     TRISB = 0;
   420  07AD  0186               	clrf	6	;volatile
   421                           
   422                           ;main.c: 48:     TRISD = 0;
   423  07AE  0188               	clrf	8	;volatile
   424                           
   425                           ;main.c: 49:     PORTB = 0;
   426  07AF  1283               	bcf	3,5	;RP0=0, select bank0
   427  07B0  1303               	bcf	3,6	;RP1=0, select bank0
   428  07B1  0186               	clrf	6	;volatile
   429                           
   430                           ;main.c: 50:     PORTD = 0;
   431  07B2  0188               	clrf	8	;volatile
   432  07B3                     l722:	
   433                           
   434                           ;main.c: 51:     RC2 = 1;
   435  07B3  1507               	bsf	7,2	;volatile
   436  07B4                     l724:	
   437                           
   438                           ;main.c: 52:     spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW
      +                          , SPI_IDLE_2_ACTIVE);
   439  07B4  01F0               	clrf	spiInit@sDataSample
   440  07B5  01F1               	clrf	spiInit@sClockIdle
   441  07B6  01F2               	clrf	spiInit@sTransmitEdge
   442  07B7  3020               	movlw	32
   443  07B8  120A  118A  2790  120A  118A  	fcall	_spiInit
   444  07BD                     l726:	
   445                           
   446                           ;main.c: 55:         RC2 = 0;
   447  07BD  1283               	bcf	3,5	;RP0=0, select bank0
   448  07BE  1303               	bcf	3,6	;RP1=0, select bank0
   449  07BF  1107               	bcf	7,2	;volatile
   450  07C0                     l728:	
   451                           
   452                           ;main.c: 56:        _delay((unsigned long)((1)*(8000000/4000.0)));
   453  07C0  3003               	movlw	3
   454  07C1  00F5               	movwf	??_main+1
   455  07C2  3097               	movlw	151
   456  07C3  00F4               	movwf	??_main
   457  07C4                     u47:	
   458  07C4  0BF4               	decfsz	??_main,f
   459  07C5  2FC4               	goto	u47
   460  07C6  0BF5               	decfsz	??_main+1,f
   461  07C7  2FC4               	goto	u47
   462  07C8  2FC9               	nop2
   463  07C9                     l730:	
   464                           
   465                           ;main.c: 58:        spiWrite(PORTB);
   466  07C9  1283               	bcf	3,5	;RP0=0, select bank0
   467  07CA  1303               	bcf	3,6	;RP1=0, select bank0
   468  07CB  0806               	movf	6,w	;volatile
   469  07CC  120A  118A  277A  120A  118A  	fcall	_spiWrite
   470  07D1                     l732:	
   471                           
   472                           ;main.c: 59:        PORTD = spiRead();
   473  07D1  120A  118A  2787  120A  118A  	fcall	_spiRead
   474  07D6  1283               	bcf	3,5	;RP0=0, select bank0
   475  07D7  1303               	bcf	3,6	;RP1=0, select bank0
   476  07D8  0088               	movwf	8	;volatile
   477  07D9                     l734:	
   478                           
   479                           ;main.c: 61:        _delay((unsigned long)((1)*(8000000/4000.0)));
   480  07D9  3003               	movlw	3
   481  07DA  00F5               	movwf	??_main+1
   482  07DB  3097               	movlw	151
   483  07DC  00F4               	movwf	??_main
   484  07DD                     u57:	
   485  07DD  0BF4               	decfsz	??_main,f
   486  07DE  2FDD               	goto	u57
   487  07DF  0BF5               	decfsz	??_main+1,f
   488  07E0  2FDD               	goto	u57
   489  07E1  2FE2               	nop2
   490  07E2                     l736:	
   491                           
   492                           ;main.c: 62:        RC2 = 1;
   493  07E2  1283               	bcf	3,5	;RP0=0, select bank0
   494  07E3  1303               	bcf	3,6	;RP1=0, select bank0
   495  07E4  1507               	bsf	7,2	;volatile
   496  07E5                     l738:	
   497                           
   498                           ;main.c: 64:        _delay((unsigned long)((250)*(8000000/4000.0)));
   499  07E5  3003               	movlw	3
   500  07E6  00F6               	movwf	??_main+2
   501  07E7  308A               	movlw	138
   502  07E8  00F5               	movwf	??_main+1
   503  07E9  3055               	movlw	85
   504  07EA  00F4               	movwf	??_main
   505  07EB                     u67:	
   506  07EB  0BF4               	decfsz	??_main,f
   507  07EC  2FEB               	goto	u67
   508  07ED  0BF5               	decfsz	??_main+1,f
   509  07EE  2FEB               	goto	u67
   510  07EF  0BF6               	decfsz	??_main+2,f
   511  07F0  2FEB               	goto	u67
   512  07F1  2FF2               	nop2
   513  07F2                     l740:	
   514                           
   515                           ;main.c: 65:        PORTB++;
   516  07F2  3001               	movlw	1
   517  07F3  00F4               	movwf	??_main
   518  07F4  0874               	movf	??_main,w
   519  07F5  1283               	bcf	3,5	;RP0=0, select bank0
   520  07F6  1303               	bcf	3,6	;RP1=0, select bank0
   521  07F7  0786               	addwf	6,f	;volatile
   522  07F8  2FBD               	goto	l726
   523  07F9  120A  118A  2800   	ljmp	start
   524  07FC                     __end_of_main:	
   525                           
   526                           	psect	text1
   527  077A                     __ptext1:	
   528 ;; *************** function _spiWrite *****************
   529 ;; Defined at:
   530 ;;		line 34 in file "SPI.c"
   531 ;; Parameters:    Size  Location     Type
   532 ;;  dat             1    wreg     unsigned char 
   533 ;; Auto vars:     Size  Location     Type
   534 ;;  dat             1    0[COMMON] unsigned char 
   535 ;; Return value:  Size  Location     Type
   536 ;;                  1    wreg      void 
   537 ;; Registers used:
   538 ;;		wreg
   539 ;; Tracked objects:
   540 ;;		On entry : 0/0
   541 ;;		On exit  : 0/0
   542 ;;		Unchanged: 0/0
   543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   544 ;;      Params:         0       0       0       0       0
   545 ;;      Locals:         1       0       0       0       0
   546 ;;      Temps:          0       0       0       0       0
   547 ;;      Totals:         1       0       0       0       0
   548 ;;Total ram usage:        1 bytes
   549 ;; Hardware stack levels used:    1
   550 ;; This function calls:
   551 ;;		Nothing
   552 ;; This function is called by:
   553 ;;		_main
   554 ;; This function uses a non-reentrant model
   555 ;;
   556                           
   557                           
   558                           ;psect for function _spiWrite
   559  077A                     _spiWrite:	
   560                           
   561                           ;incstack = 0
   562                           ; Regs used in _spiWrite: [wreg]
   563                           ;spiWrite@dat stored from wreg
   564  077A  00F0               	movwf	spiWrite@dat
   565  077B                     l670:	
   566                           
   567                           ;SPI.c: 34: void spiWrite(char dat);SPI.c: 35: {;SPI.c: 36:     SSPBUF = dat;
   568  077B  0870               	movf	spiWrite@dat,w
   569  077C  1283               	bcf	3,5	;RP0=0, select bank0
   570  077D  1303               	bcf	3,6	;RP1=0, select bank0
   571  077E  0093               	movwf	19	;volatile
   572  077F                     l58:	
   573  077F  0008               	return
   574  0780                     __end_of_spiWrite:	
   575                           
   576                           	psect	text2
   577  0787                     __ptext2:	
   578 ;; *************** function _spiRead *****************
   579 ;; Defined at:
   580 ;;		line 47 in file "SPI.c"
   581 ;; Parameters:    Size  Location     Type
   582 ;;		None
   583 ;; Auto vars:     Size  Location     Type
   584 ;;		None
   585 ;; Return value:  Size  Location     Type
   586 ;;                  1    wreg      unsigned char 
   587 ;; Registers used:
   588 ;;		wreg, status,2, status,0, pclath, cstack
   589 ;; Tracked objects:
   590 ;;		On entry : 0/0
   591 ;;		On exit  : 0/0
   592 ;;		Unchanged: 0/0
   593 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   594 ;;      Params:         0       0       0       0       0
   595 ;;      Locals:         0       0       0       0       0
   596 ;;      Temps:          0       0       0       0       0
   597 ;;      Totals:         0       0       0       0       0
   598 ;;Total ram usage:        0 bytes
   599 ;; Hardware stack levels used:    1
   600 ;; Hardware stack levels required when called:    1
   601 ;; This function calls:
   602 ;;		_spiReceiveWait
   603 ;; This function is called by:
   604 ;;		_main
   605 ;; This function uses a non-reentrant model
   606 ;;
   607                           
   608                           
   609                           ;psect for function _spiRead
   610  0787                     _spiRead:	
   611  0787                     l672:	
   612                           ;incstack = 0
   613                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
   614                           
   615                           
   616                           ;SPI.c: 49:     spiReceiveWait();
   617  0787  120A  118A  2780  120A  118A  	fcall	_spiReceiveWait
   618  078C                     l674:	
   619                           
   620                           ;SPI.c: 50:     return(SSPBUF);
   621  078C  1283               	bcf	3,5	;RP0=0, select bank0
   622  078D  1303               	bcf	3,6	;RP1=0, select bank0
   623  078E  0813               	movf	19,w	;volatile
   624  078F                     l66:	
   625  078F  0008               	return
   626  0790                     __end_of_spiRead:	
   627                           
   628                           	psect	text3
   629  0780                     __ptext3:	
   630 ;; *************** function _spiReceiveWait *****************
   631 ;; Defined at:
   632 ;;		line 29 in file "SPI.c"
   633 ;; Parameters:    Size  Location     Type
   634 ;;		None
   635 ;; Auto vars:     Size  Location     Type
   636 ;;		None
   637 ;; Return value:  Size  Location     Type
   638 ;;                  1    wreg      void 
   639 ;; Registers used:
   640 ;;		None
   641 ;; Tracked objects:
   642 ;;		On entry : 0/0
   643 ;;		On exit  : 0/0
   644 ;;		Unchanged: 0/0
   645 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   646 ;;      Params:         0       0       0       0       0
   647 ;;      Locals:         0       0       0       0       0
   648 ;;      Temps:          0       0       0       0       0
   649 ;;      Totals:         0       0       0       0       0
   650 ;;Total ram usage:        0 bytes
   651 ;; Hardware stack levels used:    1
   652 ;; This function calls:
   653 ;;		Nothing
   654 ;; This function is called by:
   655 ;;		_spiRead
   656 ;; This function uses a non-reentrant model
   657 ;;
   658                           
   659                           
   660                           ;psect for function _spiReceiveWait
   661  0780                     _spiReceiveWait:	
   662  0780                     l658:	
   663                           ;incstack = 0
   664                           ; Regs used in _spiReceiveWait: []
   665                           
   666  0780                     l52:	
   667                           ;SPI.c: 31:     while ( !SSPSTATbits.BF );
   668                           
   669  0780  1683               	bsf	3,5	;RP0=1, select bank1
   670  0781  1303               	bcf	3,6	;RP1=0, select bank1
   671  0782  1C14               	btfss	20,0	;volatile
   672  0783  2F85               	goto	u11
   673  0784  2F86               	goto	u10
   674  0785                     u11:	
   675  0785  2F80               	goto	l52
   676  0786                     u10:	
   677  0786                     l55:	
   678  0786  0008               	return
   679  0787                     __end_of_spiReceiveWait:	
   680                           
   681                           	psect	text4
   682  0790                     __ptext4:	
   683 ;; *************** function _spiInit *****************
   684 ;; Defined at:
   685 ;;		line 12 in file "SPI.c"
   686 ;; Parameters:    Size  Location     Type
   687 ;;  sType           1    wreg     enum E1264
   688 ;;  sDataSample     1    0[COMMON] enum E1272
   689 ;;  sClockIdle      1    1[COMMON] enum E1276
   690 ;;  sTransmitEdg    1    2[COMMON] enum E1280
   691 ;; Auto vars:     Size  Location     Type
   692 ;;  sType           1    3[COMMON] enum E1264
   693 ;; Return value:  Size  Location     Type
   694 ;;                  1    wreg      void 
   695 ;; Registers used:
   696 ;;		wreg, status,2, status,0
   697 ;; Tracked objects:
   698 ;;		On entry : 0/0
   699 ;;		On exit  : 0/0
   700 ;;		Unchanged: 0/0
   701 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   702 ;;      Params:         3       0       0       0       0
   703 ;;      Locals:         1       0       0       0       0
   704 ;;      Temps:          0       0       0       0       0
   705 ;;      Totals:         4       0       0       0       0
   706 ;;Total ram usage:        4 bytes
   707 ;; Hardware stack levels used:    1
   708 ;; This function calls:
   709 ;;		Nothing
   710 ;; This function is called by:
   711 ;;		_main
   712 ;; This function uses a non-reentrant model
   713 ;;
   714                           
   715                           
   716                           ;psect for function _spiInit
   717  0790                     _spiInit:	
   718                           
   719                           ;incstack = 0
   720                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   721                           ;spiInit@sType stored from wreg
   722  0790  00F3               	movwf	spiInit@sType
   723  0791                     l708:	
   724                           
   725                           ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 13: {;SPI.c: 14:     TRISC5 = 0;
   726  0791  1683               	bsf	3,5	;RP0=1, select bank1
   727  0792  1303               	bcf	3,6	;RP1=0, select bank1
   728  0793  1287               	bcf	7,5	;volatile
   729                           
   730                           ;SPI.c: 15:     if(sType & 0b00000100)
   731  0794  1D73               	btfss	spiInit@sType,2
   732  0795  2F97               	goto	u31
   733  0796  2F98               	goto	u30
   734  0797                     u31:	
   735  0797  2F9C               	goto	l714
   736  0798                     u30:	
   737  0798                     l710:	
   738                           
   739                           ;SPI.c: 16:     {;SPI.c: 17:         SSPSTAT = sTransmitEdge;
   740  0798  0872               	movf	spiInit@sTransmitEdge,w
   741  0799  0094               	movwf	20	;volatile
   742  079A                     l712:	
   743                           
   744                           ;SPI.c: 18:         TRISC3 = 1;
   745  079A  1587               	bsf	7,3	;volatile
   746                           
   747                           ;SPI.c: 19:     }
   748  079B  2FA0               	goto	l48
   749  079C                     l714:	
   750                           
   751                           ;SPI.c: 21:     {;SPI.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
   752  079C  0870               	movf	spiInit@sDataSample,w
   753  079D  0472               	iorwf	spiInit@sTransmitEdge,w
   754  079E  0094               	movwf	20	;volatile
   755  079F                     l716:	
   756                           
   757                           ;SPI.c: 23:         TRISC3 = 0;
   758  079F  1187               	bcf	7,3	;volatile
   759  07A0                     l48:	
   760                           ;SPI.c: 24:     }
   761                           
   762                           
   763                           ;SPI.c: 26:     SSPCON = sType | sClockIdle;
   764  07A0  0873               	movf	spiInit@sType,w
   765  07A1  0471               	iorwf	spiInit@sClockIdle,w
   766  07A2  1283               	bcf	3,5	;RP0=0, select bank0
   767  07A3  1303               	bcf	3,6	;RP1=0, select bank0
   768  07A4  0094               	movwf	20	;volatile
   769  07A5                     l49:	
   770  07A5  0008               	return
   771  07A6                     __end_of_spiInit:	
   772  007E                     btemp	set	126	;btemp
   773  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       7
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_spiInit

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     375
                                              4 COMMON     3     3      0
                            _spiInit
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (1) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (2) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _spiInit                                              4     1      3     360
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _spiInit
   _spiRead
     _spiReceiveWait
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       7       1       50.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon Feb 10 17:02:53 2020

             __CFG_CP$OFF 0000               _SSPSTATbits 0094                        l52 0780  
                      l55 0786                        l48 07A0                        l49 07A5  
                      l66 078F                        l58 077F                        u10 0786  
                      u11 0785                        u30 0798                        u31 0797  
                      u47 07C4                        u57 07DD                        u67 07EB  
                     l710 0798                       l712 079A                       l720 07AA  
                     l714 079C                       l730 07C9                       l722 07B3  
                     l716 079F                       l708 0791                       l740 07F2  
                     l732 07D1                       l724 07B4                       l670 077B  
                     l734 07D9                       l726 07BD                       l718 07A6  
                     l672 0787                       l736 07E2                       l728 07C0  
                     l658 0780                       l674 078C                       l738 07E5  
                     _RC2 003A              __CFG_CPD$OFF 0000              __CFG_LVP$OFF 0000  
            __CFG_WRT$OFF 0000                      _main 07A6                      btemp 007E  
                    start 0000             __CFG_IESO$OFF 0000                     ?_main 0070  
           __CFG_WDTE$OFF 0000                     _ANSEL 0188                     _PORTB 0006  
                   _PORTD 0008                     _TRISB 0086                     _TRISD 0088  
          __CFG_FCMEN$OFF 0000            __CFG_BOREN$OFF 0000           __end_of_spiInit 07A6  
         __end_of_spiRead 0790                     status 0003                     wtemp0 007E  
          __CFG_MCLRE$OFF 0000           __initialization 07FC              __end_of_main 07FC  
                  ??_main 0074                    _ANSELH 0189                    _TRISC2 043A  
                  _TRISC3 043B                    _TRISC5 043D                    _SSPCON 0014  
                  _SSPBUF 0013            __CFG_PWRTE$OFF 0000          __end_of_spiWrite 0780  
               ??_spiInit 0073                 ??_spiRead 0070   __end_of__initialization 07FC  
          __pcstackCOMMON 0070                __pmaintext 07A6   __size_of_spiReceiveWait 0007  
                 _SSPSTAT 0094                 ?_spiWrite 0070                   __ptext1 077A  
                 __ptext2 0787                   __ptext3 0780                   __ptext4 0790  
                 _spiInit 0790                   _spiRead 0787      end_of_initialization 07FC  
              ??_spiWrite 0070               spiWrite@dat 0070            _spiReceiveWait 0780  
     start_initialization 07FC    __end_of_spiReceiveWait 0787                 ___latbits 0002  
         ?_spiReceiveWait 0070         __size_of_spiWrite 0006                  ?_spiInit 0070  
                ?_spiRead 0070      spiInit@sTransmitEdge 0072  __CFG_FOSC$EXTRC_NOCLKOUT 0000  
      spiInit@sDataSample 0070          __size_of_spiInit 0016          __size_of_spiRead 0009  
       __CFG_BOR4V$BOR40V 0000             __size_of_main 0056                  _spiWrite 077A  
            spiInit@sType 0073         spiInit@sClockIdle 0071          ??_spiReceiveWait 0070  
