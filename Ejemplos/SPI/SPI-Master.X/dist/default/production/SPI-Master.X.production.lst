

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon Feb 10 17:16:57 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	psect	text3,local,class=CODE,merge=1,delta=2
    10                           	psect	text4,local,class=CODE,merge=1,delta=2
    11                           	psect	text5,local,class=CODE,merge=1,delta=2
    12                           	dabs	1,0x7E,2
    13  0000                     
    14                           ; Version 2.10
    15                           ; Generated 31/07/2019 GMT
    16                           ; 
    17                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F887 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  0007                     	;# 
    56  0008                     	;# 
    57  0009                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000D                     	;# 
    62  000E                     	;# 
    63  000E                     	;# 
    64  000F                     	;# 
    65  0010                     	;# 
    66  0011                     	;# 
    67  0012                     	;# 
    68  0013                     	;# 
    69  0014                     	;# 
    70  0015                     	;# 
    71  0015                     	;# 
    72  0016                     	;# 
    73  0017                     	;# 
    74  0018                     	;# 
    75  0019                     	;# 
    76  001A                     	;# 
    77  001B                     	;# 
    78  001B                     	;# 
    79  001C                     	;# 
    80  001D                     	;# 
    81  001E                     	;# 
    82  001F                     	;# 
    83  0081                     	;# 
    84  0085                     	;# 
    85  0086                     	;# 
    86  0087                     	;# 
    87  0088                     	;# 
    88  0089                     	;# 
    89  008C                     	;# 
    90  008D                     	;# 
    91  008E                     	;# 
    92  008F                     	;# 
    93  0090                     	;# 
    94  0091                     	;# 
    95  0092                     	;# 
    96  0093                     	;# 
    97  0093                     	;# 
    98  0093                     	;# 
    99  0094                     	;# 
   100  0095                     	;# 
   101  0096                     	;# 
   102  0097                     	;# 
   103  0098                     	;# 
   104  0099                     	;# 
   105  009A                     	;# 
   106  009B                     	;# 
   107  009C                     	;# 
   108  009D                     	;# 
   109  009E                     	;# 
   110  009F                     	;# 
   111  0105                     	;# 
   112  0107                     	;# 
   113  0108                     	;# 
   114  0109                     	;# 
   115  010C                     	;# 
   116  010C                     	;# 
   117  010D                     	;# 
   118  010E                     	;# 
   119  010F                     	;# 
   120  0185                     	;# 
   121  0187                     	;# 
   122  0188                     	;# 
   123  0189                     	;# 
   124  018C                     	;# 
   125  018D                     	;# 
   126  0000                     	;# 
   127  0001                     	;# 
   128  0002                     	;# 
   129  0003                     	;# 
   130  0004                     	;# 
   131  0005                     	;# 
   132  0006                     	;# 
   133  0007                     	;# 
   134  0008                     	;# 
   135  0009                     	;# 
   136  000A                     	;# 
   137  000B                     	;# 
   138  000C                     	;# 
   139  000D                     	;# 
   140  000E                     	;# 
   141  000E                     	;# 
   142  000F                     	;# 
   143  0010                     	;# 
   144  0011                     	;# 
   145  0012                     	;# 
   146  0013                     	;# 
   147  0014                     	;# 
   148  0015                     	;# 
   149  0015                     	;# 
   150  0016                     	;# 
   151  0017                     	;# 
   152  0018                     	;# 
   153  0019                     	;# 
   154  001A                     	;# 
   155  001B                     	;# 
   156  001B                     	;# 
   157  001C                     	;# 
   158  001D                     	;# 
   159  001E                     	;# 
   160  001F                     	;# 
   161  0081                     	;# 
   162  0085                     	;# 
   163  0086                     	;# 
   164  0087                     	;# 
   165  0088                     	;# 
   166  0089                     	;# 
   167  008C                     	;# 
   168  008D                     	;# 
   169  008E                     	;# 
   170  008F                     	;# 
   171  0090                     	;# 
   172  0091                     	;# 
   173  0092                     	;# 
   174  0093                     	;# 
   175  0093                     	;# 
   176  0093                     	;# 
   177  0094                     	;# 
   178  0095                     	;# 
   179  0096                     	;# 
   180  0097                     	;# 
   181  0098                     	;# 
   182  0099                     	;# 
   183  009A                     	;# 
   184  009B                     	;# 
   185  009C                     	;# 
   186  009D                     	;# 
   187  009E                     	;# 
   188  009F                     	;# 
   189  0105                     	;# 
   190  0107                     	;# 
   191  0108                     	;# 
   192  0109                     	;# 
   193  010C                     	;# 
   194  010C                     	;# 
   195  010D                     	;# 
   196  010E                     	;# 
   197  010F                     	;# 
   198  0185                     	;# 
   199  0187                     	;# 
   200  0188                     	;# 
   201  0189                     	;# 
   202  018C                     	;# 
   203  018D                     	;# 
   204  0000                     	;# 
   205  0001                     	;# 
   206  0002                     	;# 
   207  0003                     	;# 
   208  0004                     	;# 
   209  0005                     	;# 
   210  0006                     	;# 
   211  0007                     	;# 
   212  0008                     	;# 
   213  0009                     	;# 
   214  000A                     	;# 
   215  000B                     	;# 
   216  000C                     	;# 
   217  000D                     	;# 
   218  000E                     	;# 
   219  000E                     	;# 
   220  000F                     	;# 
   221  0010                     	;# 
   222  0011                     	;# 
   223  0012                     	;# 
   224  0013                     	;# 
   225  0014                     	;# 
   226  0015                     	;# 
   227  0015                     	;# 
   228  0016                     	;# 
   229  0017                     	;# 
   230  0018                     	;# 
   231  0019                     	;# 
   232  001A                     	;# 
   233  001B                     	;# 
   234  001B                     	;# 
   235  001C                     	;# 
   236  001D                     	;# 
   237  001E                     	;# 
   238  001F                     	;# 
   239  0081                     	;# 
   240  0085                     	;# 
   241  0086                     	;# 
   242  0087                     	;# 
   243  0088                     	;# 
   244  0089                     	;# 
   245  008C                     	;# 
   246  008D                     	;# 
   247  008E                     	;# 
   248  008F                     	;# 
   249  0090                     	;# 
   250  0091                     	;# 
   251  0092                     	;# 
   252  0093                     	;# 
   253  0093                     	;# 
   254  0093                     	;# 
   255  0094                     	;# 
   256  0095                     	;# 
   257  0096                     	;# 
   258  0097                     	;# 
   259  0098                     	;# 
   260  0099                     	;# 
   261  009A                     	;# 
   262  009B                     	;# 
   263  009C                     	;# 
   264  009D                     	;# 
   265  009E                     	;# 
   266  009F                     	;# 
   267  0105                     	;# 
   268  0107                     	;# 
   269  0108                     	;# 
   270  0109                     	;# 
   271  010C                     	;# 
   272  010C                     	;# 
   273  010D                     	;# 
   274  010E                     	;# 
   275  010F                     	;# 
   276  0185                     	;# 
   277  0187                     	;# 
   278  0188                     	;# 
   279  0189                     	;# 
   280  018C                     	;# 
   281  018D                     	;# 
   282  0013                     _SSPBUF	set	19
   283  0014                     _SSPCON	set	20
   284  0008                     _PORTD	set	8
   285  0006                     _PORTB	set	6
   286  0007                     _PORTCbits	set	7
   287  0094                     _SSPSTATbits	set	148
   288  0094                     _SSPSTAT	set	148
   289  0088                     _TRISD	set	136
   290  0086                     _TRISB	set	134
   291  043B                     _TRISC3	set	1083
   292  043D                     _TRISC5	set	1085
   293  043A                     _TRISC2	set	1082
   294  0189                     _ANSELH	set	393
   295  0188                     _ANSEL	set	392
   296                           
   297                           ; #config settings
   298  0000                     
   299                           	psect	cinit
   300  07FC                     start_initialization:	
   301  07FC                     __initialization:	
   302  07FC                     end_of_initialization:	
   303                           ;End of C runtime variable initialization code
   304                           
   305  07FC                     __end_of__initialization:	
   306  07FC  0183               	clrf	3
   307  07FD  120A  118A  2FB8   	ljmp	_main	;jump to C main() function
   308                           
   309                           	psect	cstackCOMMON
   310  0070                     __pcstackCOMMON:	
   311  0070                     ?_setup:	
   312  0070                     ?_spiWrite:	
   313                           ; 1 bytes @ 0x0
   314                           
   315  0070                     ??_spiWrite:	
   316                           ; 1 bytes @ 0x0
   317                           
   318  0070                     ?_spiRead:	
   319                           ; 1 bytes @ 0x0
   320                           
   321  0070                     ??_spiRead:	
   322                           ; 1 bytes @ 0x0
   323                           
   324  0070                     ?_spiInit:	
   325                           ; 1 bytes @ 0x0
   326                           
   327  0070                     ?_main:	
   328                           ; 1 bytes @ 0x0
   329                           
   330  0070                     ?_spiReceiveWait:	
   331                           ; 1 bytes @ 0x0
   332                           
   333  0070                     ??_spiReceiveWait:	
   334                           ; 1 bytes @ 0x0
   335                           
   336  0070                     spiInit@sDataSample:	
   337                           ; 1 bytes @ 0x0
   338                           
   339  0070                     spiWrite@dat:	
   340                           ; 1 bytes @ 0x0
   341                           
   342                           
   343                           ; 1 bytes @ 0x0
   344  0070                     	ds	1
   345  0071                     spiInit@sClockIdle:	
   346                           
   347                           ; 1 bytes @ 0x1
   348  0071                     	ds	1
   349  0072                     spiInit@sTransmitEdge:	
   350                           
   351                           ; 1 bytes @ 0x2
   352  0072                     	ds	1
   353  0073                     ??_spiInit:	
   354  0073                     spiInit@sType:	
   355                           ; 1 bytes @ 0x3
   356                           
   357                           
   358                           ; 1 bytes @ 0x3
   359  0073                     	ds	1
   360  0074                     ??_setup:	
   361  0074                     ??_main:	
   362                           ; 1 bytes @ 0x4
   363                           
   364                           
   365                           ; 1 bytes @ 0x4
   366  0074                     	ds	3
   367                           
   368                           	psect	maintext
   369  07B8                     __pmaintext:	
   370 ;;
   371 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   372 ;;
   373 ;; *************** function _main *****************
   374 ;; Defined at:
   375 ;;		line 51 in file "main.c"
   376 ;; Parameters:    Size  Location     Type
   377 ;;		None
   378 ;; Auto vars:     Size  Location     Type
   379 ;;		None
   380 ;; Return value:  Size  Location     Type
   381 ;;                  1    wreg      void 
   382 ;; Registers used:
   383 ;;		wreg, status,2, status,0, pclath, cstack
   384 ;; Tracked objects:
   385 ;;		On entry : B00/0
   386 ;;		On exit  : 0/0
   387 ;;		Unchanged: 0/0
   388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   389 ;;      Params:         0       0       0       0       0
   390 ;;      Locals:         0       0       0       0       0
   391 ;;      Temps:          3       0       0       0       0
   392 ;;      Totals:         3       0       0       0       0
   393 ;;Total ram usage:        3 bytes
   394 ;; Hardware stack levels required when called:    2
   395 ;; This function calls:
   396 ;;		_setup
   397 ;;		_spiRead
   398 ;;		_spiWrite
   399 ;; This function is called by:
   400 ;;		Startup code after reset
   401 ;; This function uses a non-reentrant model
   402 ;;
   403                           
   404                           
   405                           ;psect for function _main
   406  07B8                     _main:	
   407  07B8                     l733:	
   408                           ;incstack = 0
   409                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   410                           
   411                           
   412                           ;main.c: 52:     setup();
   413  07B8  120A  118A  27A0  120A  118A  	fcall	_setup
   414  07BD                     l735:	
   415                           
   416                           ;main.c: 57:        PORTCbits.RC2 = 0;
   417  07BD  1283               	bcf	3,5	;RP0=0, select bank0
   418  07BE  1303               	bcf	3,6	;RP1=0, select bank0
   419  07BF  1107               	bcf	7,2	;volatile
   420  07C0                     l737:	
   421                           
   422                           ;main.c: 58:        _delay((unsigned long)((1)*(8000000/4000.0)));
   423  07C0  3003               	movlw	3
   424  07C1  00F5               	movwf	??_main+1
   425  07C2  3097               	movlw	151
   426  07C3  00F4               	movwf	??_main
   427  07C4                     u47:	
   428  07C4  0BF4               	decfsz	??_main,f
   429  07C5  2FC4               	goto	u47
   430  07C6  0BF5               	decfsz	??_main+1,f
   431  07C7  2FC4               	goto	u47
   432  07C8  2FC9               	nop2
   433  07C9                     l739:	
   434                           
   435                           ;main.c: 60:        spiWrite(PORTB);
   436  07C9  1283               	bcf	3,5	;RP0=0, select bank0
   437  07CA  1303               	bcf	3,6	;RP1=0, select bank0
   438  07CB  0806               	movf	6,w	;volatile
   439  07CC  120A  118A  2774  120A  118A  	fcall	_spiWrite
   440  07D1                     l741:	
   441                           
   442                           ;main.c: 61:        PORTD = spiRead();
   443  07D1  120A  118A  2781  120A  118A  	fcall	_spiRead
   444  07D6  1283               	bcf	3,5	;RP0=0, select bank0
   445  07D7  1303               	bcf	3,6	;RP1=0, select bank0
   446  07D8  0088               	movwf	8	;volatile
   447  07D9                     l743:	
   448                           
   449                           ;main.c: 63:        _delay((unsigned long)((1)*(8000000/4000.0)));
   450  07D9  3003               	movlw	3
   451  07DA  00F5               	movwf	??_main+1
   452  07DB  3097               	movlw	151
   453  07DC  00F4               	movwf	??_main
   454  07DD                     u57:	
   455  07DD  0BF4               	decfsz	??_main,f
   456  07DE  2FDD               	goto	u57
   457  07DF  0BF5               	decfsz	??_main+1,f
   458  07E0  2FDD               	goto	u57
   459  07E1  2FE2               	nop2
   460  07E2                     l745:	
   461                           
   462                           ;main.c: 64:        PORTCbits.RC2 = 1;
   463  07E2  1283               	bcf	3,5	;RP0=0, select bank0
   464  07E3  1303               	bcf	3,6	;RP1=0, select bank0
   465  07E4  1507               	bsf	7,2	;volatile
   466  07E5                     l747:	
   467                           
   468                           ;main.c: 66:        _delay((unsigned long)((250)*(8000000/4000.0)));
   469  07E5  3003               	movlw	3
   470  07E6  00F6               	movwf	??_main+2
   471  07E7  308A               	movlw	138
   472  07E8  00F5               	movwf	??_main+1
   473  07E9  3055               	movlw	85
   474  07EA  00F4               	movwf	??_main
   475  07EB                     u67:	
   476  07EB  0BF4               	decfsz	??_main,f
   477  07EC  2FEB               	goto	u67
   478  07ED  0BF5               	decfsz	??_main+1,f
   479  07EE  2FEB               	goto	u67
   480  07EF  0BF6               	decfsz	??_main+2,f
   481  07F0  2FEB               	goto	u67
   482  07F1  2FF2               	nop2
   483  07F2                     l749:	
   484                           
   485                           ;main.c: 67:        PORTB++;
   486  07F2  3001               	movlw	1
   487  07F3  00F4               	movwf	??_main
   488  07F4  0874               	movf	??_main,w
   489  07F5  1283               	bcf	3,5	;RP0=0, select bank0
   490  07F6  1303               	bcf	3,6	;RP1=0, select bank0
   491  07F7  0786               	addwf	6,f	;volatile
   492  07F8  2FBD               	goto	l735
   493  07F9  120A  118A  2800   	ljmp	start
   494  07FC                     __end_of_main:	
   495                           
   496                           	psect	text1
   497  0774                     __ptext1:	
   498 ;; *************** function _spiWrite *****************
   499 ;; Defined at:
   500 ;;		line 34 in file "SPI.c"
   501 ;; Parameters:    Size  Location     Type
   502 ;;  dat             1    wreg     unsigned char 
   503 ;; Auto vars:     Size  Location     Type
   504 ;;  dat             1    0[COMMON] unsigned char 
   505 ;; Return value:  Size  Location     Type
   506 ;;                  1    wreg      void 
   507 ;; Registers used:
   508 ;;		wreg
   509 ;; Tracked objects:
   510 ;;		On entry : 0/0
   511 ;;		On exit  : 0/0
   512 ;;		Unchanged: 0/0
   513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   514 ;;      Params:         0       0       0       0       0
   515 ;;      Locals:         1       0       0       0       0
   516 ;;      Temps:          0       0       0       0       0
   517 ;;      Totals:         1       0       0       0       0
   518 ;;Total ram usage:        1 bytes
   519 ;; Hardware stack levels used:    1
   520 ;; This function calls:
   521 ;;		Nothing
   522 ;; This function is called by:
   523 ;;		_main
   524 ;; This function uses a non-reentrant model
   525 ;;
   526                           
   527                           
   528                           ;psect for function _spiWrite
   529  0774                     _spiWrite:	
   530                           
   531                           ;incstack = 0
   532                           ; Regs used in _spiWrite: [wreg]
   533                           ;spiWrite@dat stored from wreg
   534  0774  00F0               	movwf	spiWrite@dat
   535  0775                     l683:	
   536                           
   537                           ;SPI.c: 34: void spiWrite(char dat);SPI.c: 35: {;SPI.c: 36:     SSPBUF = dat;
   538  0775  0870               	movf	spiWrite@dat,w
   539  0776  1283               	bcf	3,5	;RP0=0, select bank0
   540  0777  1303               	bcf	3,6	;RP1=0, select bank0
   541  0778  0093               	movwf	19	;volatile
   542  0779                     l63:	
   543  0779  0008               	return
   544  077A                     __end_of_spiWrite:	
   545                           
   546                           	psect	text2
   547  0781                     __ptext2:	
   548 ;; *************** function _spiRead *****************
   549 ;; Defined at:
   550 ;;		line 47 in file "SPI.c"
   551 ;; Parameters:    Size  Location     Type
   552 ;;		None
   553 ;; Auto vars:     Size  Location     Type
   554 ;;		None
   555 ;; Return value:  Size  Location     Type
   556 ;;                  1    wreg      unsigned char 
   557 ;; Registers used:
   558 ;;		wreg, status,2, status,0, pclath, cstack
   559 ;; Tracked objects:
   560 ;;		On entry : 0/0
   561 ;;		On exit  : 0/0
   562 ;;		Unchanged: 0/0
   563 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   564 ;;      Params:         0       0       0       0       0
   565 ;;      Locals:         0       0       0       0       0
   566 ;;      Temps:          0       0       0       0       0
   567 ;;      Totals:         0       0       0       0       0
   568 ;;Total ram usage:        0 bytes
   569 ;; Hardware stack levels used:    1
   570 ;; Hardware stack levels required when called:    1
   571 ;; This function calls:
   572 ;;		_spiReceiveWait
   573 ;; This function is called by:
   574 ;;		_main
   575 ;; This function uses a non-reentrant model
   576 ;;
   577                           
   578                           
   579                           ;psect for function _spiRead
   580  0781                     _spiRead:	
   581  0781                     l685:	
   582                           ;incstack = 0
   583                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
   584                           
   585                           
   586                           ;SPI.c: 49:     spiReceiveWait();
   587  0781  120A  118A  277A  120A  118A  	fcall	_spiReceiveWait
   588  0786                     l687:	
   589                           
   590                           ;SPI.c: 50:     return(SSPBUF);
   591  0786  1283               	bcf	3,5	;RP0=0, select bank0
   592  0787  1303               	bcf	3,6	;RP1=0, select bank0
   593  0788  0813               	movf	19,w	;volatile
   594  0789                     l71:	
   595  0789  0008               	return
   596  078A                     __end_of_spiRead:	
   597                           
   598                           	psect	text3
   599  077A                     __ptext3:	
   600 ;; *************** function _spiReceiveWait *****************
   601 ;; Defined at:
   602 ;;		line 29 in file "SPI.c"
   603 ;; Parameters:    Size  Location     Type
   604 ;;		None
   605 ;; Auto vars:     Size  Location     Type
   606 ;;		None
   607 ;; Return value:  Size  Location     Type
   608 ;;                  1    wreg      void 
   609 ;; Registers used:
   610 ;;		None
   611 ;; Tracked objects:
   612 ;;		On entry : 0/0
   613 ;;		On exit  : 0/0
   614 ;;		Unchanged: 0/0
   615 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   616 ;;      Params:         0       0       0       0       0
   617 ;;      Locals:         0       0       0       0       0
   618 ;;      Temps:          0       0       0       0       0
   619 ;;      Totals:         0       0       0       0       0
   620 ;;Total ram usage:        0 bytes
   621 ;; Hardware stack levels used:    1
   622 ;; This function calls:
   623 ;;		Nothing
   624 ;; This function is called by:
   625 ;;		_spiRead
   626 ;; This function uses a non-reentrant model
   627 ;;
   628                           
   629                           
   630                           ;psect for function _spiReceiveWait
   631  077A                     _spiReceiveWait:	
   632  077A                     l673:	
   633                           ;incstack = 0
   634                           ; Regs used in _spiReceiveWait: []
   635                           
   636  077A                     l57:	
   637                           ;SPI.c: 31:     while ( !SSPSTATbits.BF );
   638                           
   639  077A  1683               	bsf	3,5	;RP0=1, select bank1
   640  077B  1303               	bcf	3,6	;RP1=0, select bank1
   641  077C  1C14               	btfss	20,0	;volatile
   642  077D  2F7F               	goto	u21
   643  077E  2F80               	goto	u20
   644  077F                     u21:	
   645  077F  2F7A               	goto	l57
   646  0780                     u20:	
   647  0780                     l60:	
   648  0780  0008               	return
   649  0781                     __end_of_spiReceiveWait:	
   650                           
   651                           	psect	text4
   652  07A0                     __ptext4:	
   653 ;; *************** function _setup *****************
   654 ;; Defined at:
   655 ;;		line 74 in file "main.c"
   656 ;; Parameters:    Size  Location     Type
   657 ;;		None
   658 ;; Auto vars:     Size  Location     Type
   659 ;;		None
   660 ;; Return value:  Size  Location     Type
   661 ;;                  1    wreg      void 
   662 ;; Registers used:
   663 ;;		wreg, status,2, status,0, pclath, cstack
   664 ;; Tracked objects:
   665 ;;		On entry : 0/0
   666 ;;		On exit  : 0/0
   667 ;;		Unchanged: 0/0
   668 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   669 ;;      Params:         0       0       0       0       0
   670 ;;      Locals:         0       0       0       0       0
   671 ;;      Temps:          0       0       0       0       0
   672 ;;      Totals:         0       0       0       0       0
   673 ;;Total ram usage:        0 bytes
   674 ;; Hardware stack levels used:    1
   675 ;; Hardware stack levels required when called:    1
   676 ;; This function calls:
   677 ;;		_spiInit
   678 ;; This function is called by:
   679 ;;		_main
   680 ;; This function uses a non-reentrant model
   681 ;;
   682                           
   683                           
   684                           ;psect for function _setup
   685  07A0                     _setup:	
   686  07A0                     l725:	
   687                           ;incstack = 0
   688                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   689                           
   690                           
   691                           ;main.c: 75:     ANSEL = 0;
   692  07A0  1683               	bsf	3,5	;RP0=1, select bank3
   693  07A1  1703               	bsf	3,6	;RP1=1, select bank3
   694  07A2  0188               	clrf	8	;volatile
   695                           
   696                           ;main.c: 76:     ANSELH = 0;
   697  07A3  0189               	clrf	9	;volatile
   698  07A4                     l727:	
   699                           
   700                           ;main.c: 77:     TRISC2 = 0;
   701  07A4  1683               	bsf	3,5	;RP0=1, select bank1
   702  07A5  1303               	bcf	3,6	;RP1=0, select bank1
   703  07A6  1107               	bcf	7,2	;volatile
   704                           
   705                           ;main.c: 78:     TRISB = 0;
   706  07A7  0186               	clrf	6	;volatile
   707                           
   708                           ;main.c: 79:     TRISD = 0;
   709  07A8  0188               	clrf	8	;volatile
   710                           
   711                           ;main.c: 80:     PORTB = 0;
   712  07A9  1283               	bcf	3,5	;RP0=0, select bank0
   713  07AA  1303               	bcf	3,6	;RP1=0, select bank0
   714  07AB  0186               	clrf	6	;volatile
   715                           
   716                           ;main.c: 81:     PORTD = 0;
   717  07AC  0188               	clrf	8	;volatile
   718  07AD                     l729:	
   719                           
   720                           ;main.c: 82:     PORTCbits.RC2 = 1;
   721  07AD  1507               	bsf	7,2	;volatile
   722  07AE                     l731:	
   723                           
   724                           ;main.c: 83:     spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW
      +                          , SPI_IDLE_2_ACTIVE);
   725  07AE  01F0               	clrf	spiInit@sDataSample
   726  07AF  01F1               	clrf	spiInit@sClockIdle
   727  07B0  01F2               	clrf	spiInit@sTransmitEdge
   728  07B1  3020               	movlw	32
   729  07B2  120A  118A  278A  120A  118A  	fcall	_spiInit
   730  07B7                     l37:	
   731  07B7  0008               	return
   732  07B8                     __end_of_setup:	
   733                           
   734                           	psect	text5
   735  078A                     __ptext5:	
   736 ;; *************** function _spiInit *****************
   737 ;; Defined at:
   738 ;;		line 12 in file "SPI.c"
   739 ;; Parameters:    Size  Location     Type
   740 ;;  sType           1    wreg     enum E1264
   741 ;;  sDataSample     1    0[COMMON] enum E1272
   742 ;;  sClockIdle      1    1[COMMON] enum E1276
   743 ;;  sTransmitEdg    1    2[COMMON] enum E1280
   744 ;; Auto vars:     Size  Location     Type
   745 ;;  sType           1    3[COMMON] enum E1264
   746 ;; Return value:  Size  Location     Type
   747 ;;                  1    wreg      void 
   748 ;; Registers used:
   749 ;;		wreg, status,2, status,0
   750 ;; Tracked objects:
   751 ;;		On entry : 0/0
   752 ;;		On exit  : 0/0
   753 ;;		Unchanged: 0/0
   754 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   755 ;;      Params:         3       0       0       0       0
   756 ;;      Locals:         1       0       0       0       0
   757 ;;      Temps:          0       0       0       0       0
   758 ;;      Totals:         4       0       0       0       0
   759 ;;Total ram usage:        4 bytes
   760 ;; Hardware stack levels used:    1
   761 ;; This function calls:
   762 ;;		Nothing
   763 ;; This function is called by:
   764 ;;		_setup
   765 ;; This function uses a non-reentrant model
   766 ;;
   767                           
   768                           
   769                           ;psect for function _spiInit
   770  078A                     _spiInit:	
   771                           
   772                           ;incstack = 0
   773                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   774                           ;spiInit@sType stored from wreg
   775  078A  00F3               	movwf	spiInit@sType
   776  078B                     l715:	
   777                           
   778                           ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 13: {;SPI.c: 14:     TRISC5 = 0;
   779  078B  1683               	bsf	3,5	;RP0=1, select bank1
   780  078C  1303               	bcf	3,6	;RP1=0, select bank1
   781  078D  1287               	bcf	7,5	;volatile
   782                           
   783                           ;SPI.c: 15:     if(sType & 0b00000100)
   784  078E  1D73               	btfss	spiInit@sType,2
   785  078F  2F91               	goto	u31
   786  0790  2F92               	goto	u30
   787  0791                     u31:	
   788  0791  2F96               	goto	l721
   789  0792                     u30:	
   790  0792                     l717:	
   791                           
   792                           ;SPI.c: 16:     {;SPI.c: 17:         SSPSTAT = sTransmitEdge;
   793  0792  0872               	movf	spiInit@sTransmitEdge,w
   794  0793  0094               	movwf	20	;volatile
   795  0794                     l719:	
   796                           
   797                           ;SPI.c: 18:         TRISC3 = 1;
   798  0794  1587               	bsf	7,3	;volatile
   799                           
   800                           ;SPI.c: 19:     }
   801  0795  2F9A               	goto	l53
   802  0796                     l721:	
   803                           
   804                           ;SPI.c: 21:     {;SPI.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
   805  0796  0870               	movf	spiInit@sDataSample,w
   806  0797  0472               	iorwf	spiInit@sTransmitEdge,w
   807  0798  0094               	movwf	20	;volatile
   808  0799                     l723:	
   809                           
   810                           ;SPI.c: 23:         TRISC3 = 0;
   811  0799  1187               	bcf	7,3	;volatile
   812  079A                     l53:	
   813                           ;SPI.c: 24:     }
   814                           
   815                           
   816                           ;SPI.c: 26:     SSPCON = sType | sClockIdle;
   817  079A  0873               	movf	spiInit@sType,w
   818  079B  0471               	iorwf	spiInit@sClockIdle,w
   819  079C  1283               	bcf	3,5	;RP0=0, select bank0
   820  079D  1303               	bcf	3,6	;RP1=0, select bank0
   821  079E  0094               	movwf	20	;volatile
   822  079F                     l54:	
   823  079F  0008               	return
   824  07A0                     __end_of_spiInit:	
   825  007E                     btemp	set	126	;btemp
   826  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       7
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _setup->_spiInit

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     375
                                              4 COMMON     3     3      0
                              _setup
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (1) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (2) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     360
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup
     _spiInit
   _spiRead
     _spiReceiveWait
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       7       1       50.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon Feb 10 17:16:57 2020

             __CFG_CP$OFF 0000               _SSPSTATbits 0094                        l60 0780  
                      l53 079A                        l37 07B7                        l54 079F  
                      l71 0789                        l63 0779                        l57 077A  
                      u20 0780                        u21 077F                        u30 0792  
                      u31 0791                        u47 07C4                        u57 07DD  
                      u67 07EB                       l721 0796                       l723 0799  
                     l715 078B                       l731 07AE                       l717 0792  
                     l725 07A0                       l741 07D1                       l733 07B8  
                     l719 0794                       l727 07A4                       l743 07D9  
                     l735 07BD                       l729 07AD                       l673 077A  
                     l745 07E2                       l737 07C0                       l683 0775  
                     l747 07E5                       l739 07C9                       l685 0781  
                     l749 07F2                       l687 0786              __CFG_CPD$OFF 0000  
            __CFG_LVP$OFF 0000              __CFG_WRT$OFF 0000                      _main 07B8  
                    btemp 007E                      start 0000             __CFG_IESO$OFF 0000  
                   ?_main 0070             __CFG_WDTE$OFF 0000                     _ANSEL 0188  
                   _PORTB 0006                     _PORTD 0008                     _TRISB 0086  
                   _TRISD 0088            __CFG_FCMEN$OFF 0000                     _setup 07A0  
          __CFG_BOREN$OFF 0000           __end_of_spiInit 07A0           __end_of_spiRead 078A  
                   status 0003                     wtemp0 007E            __CFG_MCLRE$OFF 0000  
         __initialization 07FC              __end_of_main 07FC                    ??_main 0074  
                  ?_setup 0070                    _ANSELH 0189                    _TRISC2 043A  
                  _TRISC3 043B                    _TRISC5 043D                    _SSPCON 0014  
                  _SSPBUF 0013            __CFG_PWRTE$OFF 0000          __end_of_spiWrite 077A  
               ??_spiInit 0073                 ??_spiRead 0070   __end_of__initialization 07FC  
          __pcstackCOMMON 0070             __end_of_setup 07B8                   ??_setup 0074  
              __pmaintext 07B8   __size_of_spiReceiveWait 0007                   _SSPSTAT 0094  
               ?_spiWrite 0070                   __ptext1 0774                   __ptext2 0781  
                 __ptext3 077A                   __ptext4 07A0                   __ptext5 078A  
                 _spiInit 078A                   _spiRead 0781      end_of_initialization 07FC  
              ??_spiWrite 0070                 _PORTCbits 0007               spiWrite@dat 0070  
          _spiReceiveWait 077A       start_initialization 07FC    __end_of_spiReceiveWait 0781  
               ___latbits 0002           ?_spiReceiveWait 0070         __size_of_spiWrite 0006  
                ?_spiInit 0070                  ?_spiRead 0070            __size_of_setup 0018  
    spiInit@sTransmitEdge 0072  __CFG_FOSC$EXTRC_NOCLKOUT 0000        spiInit@sDataSample 0070  
        __size_of_spiInit 0016          __size_of_spiRead 0009         __CFG_BOR4V$BOR40V 0000  
           __size_of_main 0044                  _spiWrite 0774              spiInit@sType 0073  
       spiInit@sClockIdle 0071          ??_spiReceiveWait 0070  
