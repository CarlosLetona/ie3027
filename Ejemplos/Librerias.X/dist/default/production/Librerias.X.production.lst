

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Tue Jan 28 08:45:59 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	intentry,global,class=CODE,delta=2
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Version 2.10
    16                           ; Generated 31/07/2019 GMT
    17                           ; 
    18                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F887 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000D                     	;# 
    63  000E                     	;# 
    64  000E                     	;# 
    65  000F                     	;# 
    66  0010                     	;# 
    67  0011                     	;# 
    68  0012                     	;# 
    69  0013                     	;# 
    70  0014                     	;# 
    71  0015                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0017                     	;# 
    75  0018                     	;# 
    76  0019                     	;# 
    77  001A                     	;# 
    78  001B                     	;# 
    79  001B                     	;# 
    80  001C                     	;# 
    81  001D                     	;# 
    82  001E                     	;# 
    83  001F                     	;# 
    84  0081                     	;# 
    85  0085                     	;# 
    86  0086                     	;# 
    87  0087                     	;# 
    88  0088                     	;# 
    89  0089                     	;# 
    90  008C                     	;# 
    91  008D                     	;# 
    92  008E                     	;# 
    93  008F                     	;# 
    94  0090                     	;# 
    95  0091                     	;# 
    96  0092                     	;# 
    97  0093                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0094                     	;# 
   101  0095                     	;# 
   102  0096                     	;# 
   103  0097                     	;# 
   104  0098                     	;# 
   105  0099                     	;# 
   106  009A                     	;# 
   107  009B                     	;# 
   108  009C                     	;# 
   109  009D                     	;# 
   110  009E                     	;# 
   111  009F                     	;# 
   112  0105                     	;# 
   113  0107                     	;# 
   114  0108                     	;# 
   115  0109                     	;# 
   116  010C                     	;# 
   117  010C                     	;# 
   118  010D                     	;# 
   119  010E                     	;# 
   120  010F                     	;# 
   121  0185                     	;# 
   122  0187                     	;# 
   123  0188                     	;# 
   124  0189                     	;# 
   125  018C                     	;# 
   126  018D                     	;# 
   127  0000                     	;# 
   128  0001                     	;# 
   129  0002                     	;# 
   130  0003                     	;# 
   131  0004                     	;# 
   132  0005                     	;# 
   133  0006                     	;# 
   134  0007                     	;# 
   135  0008                     	;# 
   136  0009                     	;# 
   137  000A                     	;# 
   138  000B                     	;# 
   139  000C                     	;# 
   140  000D                     	;# 
   141  000E                     	;# 
   142  000E                     	;# 
   143  000F                     	;# 
   144  0010                     	;# 
   145  0011                     	;# 
   146  0012                     	;# 
   147  0013                     	;# 
   148  0014                     	;# 
   149  0015                     	;# 
   150  0015                     	;# 
   151  0016                     	;# 
   152  0017                     	;# 
   153  0018                     	;# 
   154  0019                     	;# 
   155  001A                     	;# 
   156  001B                     	;# 
   157  001B                     	;# 
   158  001C                     	;# 
   159  001D                     	;# 
   160  001E                     	;# 
   161  001F                     	;# 
   162  0081                     	;# 
   163  0085                     	;# 
   164  0086                     	;# 
   165  0087                     	;# 
   166  0088                     	;# 
   167  0089                     	;# 
   168  008C                     	;# 
   169  008D                     	;# 
   170  008E                     	;# 
   171  008F                     	;# 
   172  0090                     	;# 
   173  0091                     	;# 
   174  0092                     	;# 
   175  0093                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0094                     	;# 
   179  0095                     	;# 
   180  0096                     	;# 
   181  0097                     	;# 
   182  0098                     	;# 
   183  0099                     	;# 
   184  009A                     	;# 
   185  009B                     	;# 
   186  009C                     	;# 
   187  009D                     	;# 
   188  009E                     	;# 
   189  009F                     	;# 
   190  0105                     	;# 
   191  0107                     	;# 
   192  0108                     	;# 
   193  0109                     	;# 
   194  010C                     	;# 
   195  010C                     	;# 
   196  010D                     	;# 
   197  010E                     	;# 
   198  010F                     	;# 
   199  0185                     	;# 
   200  0187                     	;# 
   201  0188                     	;# 
   202  0189                     	;# 
   203  018C                     	;# 
   204  018D                     	;# 
   205  0000                     	;# 
   206  0001                     	;# 
   207  0002                     	;# 
   208  0003                     	;# 
   209  0004                     	;# 
   210  0005                     	;# 
   211  0006                     	;# 
   212  0007                     	;# 
   213  0008                     	;# 
   214  0009                     	;# 
   215  000A                     	;# 
   216  000B                     	;# 
   217  000C                     	;# 
   218  000D                     	;# 
   219  000E                     	;# 
   220  000E                     	;# 
   221  000F                     	;# 
   222  0010                     	;# 
   223  0011                     	;# 
   224  0012                     	;# 
   225  0013                     	;# 
   226  0014                     	;# 
   227  0015                     	;# 
   228  0015                     	;# 
   229  0016                     	;# 
   230  0017                     	;# 
   231  0018                     	;# 
   232  0019                     	;# 
   233  001A                     	;# 
   234  001B                     	;# 
   235  001B                     	;# 
   236  001C                     	;# 
   237  001D                     	;# 
   238  001E                     	;# 
   239  001F                     	;# 
   240  0081                     	;# 
   241  0085                     	;# 
   242  0086                     	;# 
   243  0087                     	;# 
   244  0088                     	;# 
   245  0089                     	;# 
   246  008C                     	;# 
   247  008D                     	;# 
   248  008E                     	;# 
   249  008F                     	;# 
   250  0090                     	;# 
   251  0091                     	;# 
   252  0092                     	;# 
   253  0093                     	;# 
   254  0093                     	;# 
   255  0093                     	;# 
   256  0094                     	;# 
   257  0095                     	;# 
   258  0096                     	;# 
   259  0097                     	;# 
   260  0098                     	;# 
   261  0099                     	;# 
   262  009A                     	;# 
   263  009B                     	;# 
   264  009C                     	;# 
   265  009D                     	;# 
   266  009E                     	;# 
   267  009F                     	;# 
   268  0105                     	;# 
   269  0107                     	;# 
   270  0108                     	;# 
   271  0109                     	;# 
   272  010C                     	;# 
   273  010C                     	;# 
   274  010D                     	;# 
   275  010E                     	;# 
   276  010F                     	;# 
   277  0185                     	;# 
   278  0187                     	;# 
   279  0188                     	;# 
   280  0189                     	;# 
   281  018C                     	;# 
   282  018D                     	;# 
   283  000B                     _INTCON	set	11
   284  0006                     _PORTB	set	6
   285  0001                     _TMR0	set	1
   286  005A                     _TMR0IF	set	90
   287  008F                     _OSCCONbits	set	143
   288  0081                     _OPTION_REG	set	129
   289  0086                     _TRISB	set	134
   290  0189                     _ANSELH	set	393
   291  0188                     _ANSEL	set	392
   292                           
   293                           ; #config settings
   294  0000                     
   295                           	psect	cinit
   296  000F                     start_initialization:	
   297  000F                     __initialization:	
   298                           
   299                           ; Clear objects allocated to COMMON
   300  000F  01F4               	clrf	__pbssCOMMON& (0+127)
   301  0010  01F5               	clrf	(__pbssCOMMON+1)& (0+127)
   302  0011                     end_of_initialization:	
   303                           ;End of C runtime variable initialization code
   304                           
   305  0011                     __end_of__initialization:	
   306  0011  0183               	clrf	3
   307  0012  120A  118A  283C   	ljmp	_main	;jump to C main() function
   308                           
   309                           	psect	bssCOMMON
   310  0074                     __pbssCOMMON:	
   311  0074                     _contador:	
   312  0074                     	ds	2
   313                           
   314                           	psect	cstackCOMMON
   315  0070                     __pcstackCOMMON:	
   316  0070                     ?_initOsc:	
   317  0070                     ?_initPorts:	
   318                           ; 1 bytes @ 0x0
   319                           
   320  0070                     ?_initTMR0:	
   321                           ; 1 bytes @ 0x0
   322                           
   323  0070                     ?_ISR:	
   324                           ; 1 bytes @ 0x0
   325                           
   326  0070                     ??_ISR:	
   327                           ; 1 bytes @ 0x0
   328                           
   329  0070                     ?_main:	
   330                           ; 1 bytes @ 0x0
   331                           
   332                           
   333                           ; 1 bytes @ 0x0
   334  0070                     	ds	2
   335  0072                     ??_initOsc:	
   336  0072                     ??_initPorts:	
   337                           ; 1 bytes @ 0x2
   338                           
   339  0072                     ??_initTMR0:	
   340                           ; 1 bytes @ 0x2
   341                           
   342  0072                     initOsc@frec:	
   343                           ; 1 bytes @ 0x2
   344                           
   345                           
   346                           ; 1 bytes @ 0x2
   347  0072                     	ds	1
   348  0073                     ??_main:	
   349                           
   350                           ; 1 bytes @ 0x3
   351  0073                     	ds	1
   352                           
   353                           	psect	maintext
   354  003C                     __pmaintext:	
   355 ;;
   356 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   357 ;;
   358 ;; *************** function _main *****************
   359 ;; Defined at:
   360 ;;		line 54 in file "main.c"
   361 ;; Parameters:    Size  Location     Type
   362 ;;		None
   363 ;; Auto vars:     Size  Location     Type
   364 ;;		None
   365 ;; Return value:  Size  Location     Type
   366 ;;                  1    wreg      void 
   367 ;; Registers used:
   368 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   369 ;; Tracked objects:
   370 ;;		On entry : B00/0
   371 ;;		On exit  : 0/0
   372 ;;		Unchanged: 0/0
   373 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   374 ;;      Params:         0       0       0       0       0
   375 ;;      Locals:         0       0       0       0       0
   376 ;;      Temps:          1       0       0       0       0
   377 ;;      Totals:         1       0       0       0       0
   378 ;;Total ram usage:        1 bytes
   379 ;; Hardware stack levels required when called:    2
   380 ;; This function calls:
   381 ;;		_initOsc
   382 ;;		_initPorts
   383 ;;		_initTMR0
   384 ;; This function is called by:
   385 ;;		Startup code after reset
   386 ;; This function uses a non-reentrant model
   387 ;;
   388                           
   389                           
   390                           ;psect for function _main
   391  003C                     _main:	
   392  003C                     l664:	
   393                           ;incstack = 0
   394                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   395                           
   396                           
   397                           ;main.c: 55: initOsc(7);
   398  003C  3007               	movlw	7
   399  003D  120A  118A  2015  120A  118A  	fcall	_initOsc
   400  0042                     l666:	
   401                           
   402                           ;main.c: 56: initPorts();
   403  0042  120A  118A  2082  120A  118A  	fcall	_initPorts
   404  0047                     l668:	
   405                           
   406                           ;main.c: 57: initTMR0();
   407  0047  120A  118A  2077  120A  118A  	fcall	_initTMR0
   408  004C                     l670:	
   409                           
   410                           ;main.c: 59: if(contador >= 1000){
   411  004C  3003               	movlw	3
   412  004D  0275               	subwf	_contador+1,w
   413  004E  30E8               	movlw	232
   414  004F  1903               	skipnz
   415  0050  0274               	subwf	_contador,w
   416  0051  1C03               	skipc
   417  0052  2854               	goto	u21
   418  0053  2855               	goto	u20
   419  0054                     u21:	
   420  0054  284C               	goto	l670
   421  0055                     u20:	
   422  0055                     l672:	
   423                           
   424                           ;main.c: 60: PORTB++;
   425  0055  3001               	movlw	1
   426  0056  00F3               	movwf	??_main
   427  0057  0873               	movf	??_main,w
   428  0058  1283               	bcf	3,5	;RP0=0, select bank0
   429  0059  1303               	bcf	3,6	;RP1=0, select bank0
   430  005A  0786               	addwf	6,f	;volatile
   431  005B                     l674:	
   432                           
   433                           ;main.c: 61: contador = 0;
   434  005B  01F4               	clrf	_contador
   435  005C  01F5               	clrf	_contador+1
   436  005D  284C               	goto	l670
   437  005E  120A  118A  280C   	ljmp	start
   438  0061                     __end_of_main:	
   439                           
   440                           	psect	text1
   441  0077                     __ptext1:	
   442 ;; *************** function _initTMR0 *****************
   443 ;; Defined at:
   444 ;;		line 78 in file "main.c"
   445 ;; Parameters:    Size  Location     Type
   446 ;;		None
   447 ;; Auto vars:     Size  Location     Type
   448 ;;		None
   449 ;; Return value:  Size  Location     Type
   450 ;;                  1    wreg      void 
   451 ;; Registers used:
   452 ;;		wreg
   453 ;; Tracked objects:
   454 ;;		On entry : 0/0
   455 ;;		On exit  : 0/0
   456 ;;		Unchanged: 0/0
   457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   458 ;;      Params:         0       0       0       0       0
   459 ;;      Locals:         0       0       0       0       0
   460 ;;      Temps:          0       0       0       0       0
   461 ;;      Totals:         0       0       0       0       0
   462 ;;Total ram usage:        0 bytes
   463 ;; Hardware stack levels used:    1
   464 ;; Hardware stack levels required when called:    1
   465 ;; This function calls:
   466 ;;		Nothing
   467 ;; This function is called by:
   468 ;;		_main
   469 ;; This function uses a non-reentrant model
   470 ;;
   471                           
   472                           
   473                           ;psect for function _initTMR0
   474  0077                     _initTMR0:	
   475  0077                     l656:	
   476                           ;incstack = 0
   477                           ; Regs used in _initTMR0: [wreg]
   478                           
   479                           
   480                           ;main.c: 79: OPTION_REG = 0x81;
   481  0077  3081               	movlw	129
   482  0078  1683               	bsf	3,5	;RP0=1, select bank1
   483  0079  1303               	bcf	3,6	;RP1=0, select bank1
   484  007A  0081               	movwf	1	;volatile
   485                           
   486                           ;main.c: 80: TMR0 = 4;
   487  007B  3004               	movlw	4
   488  007C  1283               	bcf	3,5	;RP0=0, select bank0
   489  007D  1303               	bcf	3,6	;RP1=0, select bank0
   490  007E  0081               	movwf	1	;volatile
   491                           
   492                           ;main.c: 81: INTCON = 0xA0;
   493  007F  30A0               	movlw	160
   494  0080  008B               	movwf	11	;volatile
   495  0081                     l45:	
   496  0081  0008               	return
   497  0082                     __end_of_initTMR0:	
   498                           
   499                           	psect	text2
   500  0082                     __ptext2:	
   501 ;; *************** function _initPorts *****************
   502 ;; Defined at:
   503 ;;		line 69 in file "main.c"
   504 ;; Parameters:    Size  Location     Type
   505 ;;		None
   506 ;; Auto vars:     Size  Location     Type
   507 ;;		None
   508 ;; Return value:  Size  Location     Type
   509 ;;                  1    wreg      void 
   510 ;; Registers used:
   511 ;;		status,2
   512 ;; Tracked objects:
   513 ;;		On entry : 0/0
   514 ;;		On exit  : 0/0
   515 ;;		Unchanged: 0/0
   516 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   517 ;;      Params:         0       0       0       0       0
   518 ;;      Locals:         0       0       0       0       0
   519 ;;      Temps:          0       0       0       0       0
   520 ;;      Totals:         0       0       0       0       0
   521 ;;Total ram usage:        0 bytes
   522 ;; Hardware stack levels used:    1
   523 ;; Hardware stack levels required when called:    1
   524 ;; This function calls:
   525 ;;		Nothing
   526 ;; This function is called by:
   527 ;;		_main
   528 ;; This function uses a non-reentrant model
   529 ;;
   530                           
   531                           
   532                           ;psect for function _initPorts
   533  0082                     _initPorts:	
   534  0082                     l654:	
   535                           ;incstack = 0
   536                           ; Regs used in _initPorts: [status,2]
   537                           
   538                           
   539                           ;main.c: 70: TRISB = 0;
   540  0082  1683               	bsf	3,5	;RP0=1, select bank1
   541  0083  1303               	bcf	3,6	;RP1=0, select bank1
   542  0084  0186               	clrf	6	;volatile
   543                           
   544                           ;main.c: 71: ANSEL = 0;
   545  0085  1683               	bsf	3,5	;RP0=1, select bank3
   546  0086  1703               	bsf	3,6	;RP1=1, select bank3
   547  0087  0188               	clrf	8	;volatile
   548                           
   549                           ;main.c: 72: ANSELH = 0;
   550  0088  0189               	clrf	9	;volatile
   551                           
   552                           ;main.c: 73: PORTB = 0;
   553  0089  1283               	bcf	3,5	;RP0=0, select bank0
   554  008A  1303               	bcf	3,6	;RP1=0, select bank0
   555  008B  0186               	clrf	6	;volatile
   556  008C                     l42:	
   557  008C  0008               	return
   558  008D                     __end_of_initPorts:	
   559                           
   560                           	psect	text3
   561  0015                     __ptext3:	
   562 ;; *************** function _initOsc *****************
   563 ;; Defined at:
   564 ;;		line 8 in file "Oscilador.c"
   565 ;; Parameters:    Size  Location     Type
   566 ;;  frec            1    wreg     unsigned char 
   567 ;; Auto vars:     Size  Location     Type
   568 ;;  frec            1    2[COMMON] unsigned char 
   569 ;; Return value:  Size  Location     Type
   570 ;;                  1    wreg      void 
   571 ;; Registers used:
   572 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   573 ;; Tracked objects:
   574 ;;		On entry : 0/0
   575 ;;		On exit  : 0/0
   576 ;;		Unchanged: 0/0
   577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   578 ;;      Params:         0       0       0       0       0
   579 ;;      Locals:         1       0       0       0       0
   580 ;;      Temps:          0       0       0       0       0
   581 ;;      Totals:         1       0       0       0       0
   582 ;;Total ram usage:        1 bytes
   583 ;; Hardware stack levels used:    1
   584 ;; Hardware stack levels required when called:    1
   585 ;; This function calls:
   586 ;;		Nothing
   587 ;; This function is called by:
   588 ;;		_main
   589 ;; This function uses a non-reentrant model
   590 ;;
   591                           
   592                           
   593                           ;psect for function _initOsc
   594  0015                     _initOsc:	
   595                           
   596                           ;incstack = 0
   597                           ; Regs used in _initOsc: [wreg-fsr0h+status,2+status,0]
   598                           ;initOsc@frec stored from wreg
   599  0015  00F2               	movwf	initOsc@frec
   600  0016                     l648:	
   601                           
   602                           ;Oscilador.c: 9: switch(frec){
   603  0016  282F               	goto	l652
   604  0017                     l51:	
   605                           ;Oscilador.c: 10: case 0:
   606                           
   607                           
   608                           ;Oscilador.c: 11: OSCCONbits.IRCF0 = 0;
   609  0017  1683               	bsf	3,5	;RP0=1, select bank1
   610  0018  1303               	bcf	3,6	;RP1=0, select bank1
   611  0019  120F               	bcf	15,4	;volatile
   612                           
   613                           ;Oscilador.c: 12: OSCCONbits.IRCF1 = 0;
   614  001A  128F               	bcf	15,5	;volatile
   615                           
   616                           ;Oscilador.c: 13: OSCCONbits.IRCF2 = 0;
   617  001B  130F               	bcf	15,6	;volatile
   618                           
   619                           ;Oscilador.c: 14: break;
   620  001C  283A               	goto	l52
   621  001D                     l53:	
   622                           ;Oscilador.c: 15: case 1:
   623                           
   624                           
   625                           ;Oscilador.c: 16: OSCCONbits.IRCF0 = 1;
   626  001D  1683               	bsf	3,5	;RP0=1, select bank1
   627  001E  1303               	bcf	3,6	;RP1=0, select bank1
   628  001F  160F               	bsf	15,4	;volatile
   629                           
   630                           ;Oscilador.c: 17: OSCCONbits.IRCF1 = 0;
   631  0020  128F               	bcf	15,5	;volatile
   632                           
   633                           ;Oscilador.c: 18: OSCCONbits.IRCF2 = 0;
   634  0021  130F               	bcf	15,6	;volatile
   635                           
   636                           ;Oscilador.c: 19: break;
   637  0022  283A               	goto	l52
   638  0023                     l54:	
   639                           ;Oscilador.c: 27: case 7:
   640                           
   641                           
   642                           ;Oscilador.c: 28: OSCCONbits.IRCF0 = 1;
   643  0023  1683               	bsf	3,5	;RP0=1, select bank1
   644  0024  1303               	bcf	3,6	;RP1=0, select bank1
   645  0025  160F               	bsf	15,4	;volatile
   646                           
   647                           ;Oscilador.c: 29: OSCCONbits.IRCF1 = 1;
   648  0026  168F               	bsf	15,5	;volatile
   649                           
   650                           ;Oscilador.c: 30: OSCCONbits.IRCF2 = 1;
   651  0027  170F               	bsf	15,6	;volatile
   652                           
   653                           ;Oscilador.c: 31: break;
   654  0028  283A               	goto	l52
   655  0029                     l55:	
   656                           ;Oscilador.c: 32: default:
   657                           
   658                           
   659                           ;Oscilador.c: 33: OSCCONbits.IRCF0 = 0;
   660  0029  1683               	bsf	3,5	;RP0=1, select bank1
   661  002A  1303               	bcf	3,6	;RP1=0, select bank1
   662  002B  120F               	bcf	15,4	;volatile
   663                           
   664                           ;Oscilador.c: 34: OSCCONbits.IRCF1 = 1;
   665  002C  168F               	bsf	15,5	;volatile
   666                           
   667                           ;Oscilador.c: 35: OSCCONbits.IRCF2 = 1;
   668  002D  170F               	bsf	15,6	;volatile
   669                           
   670                           ;Oscilador.c: 36: break;
   671  002E  283A               	goto	l52
   672  002F                     l652:	
   673  002F  0872               	movf	initOsc@frec,w
   674                           
   675                           ; Switch size 1, requested type "simple"
   676                           ; Number of cases is 3, Range of values is 0 to 7
   677                           ; switch strategies available:
   678                           ; Name         Instructions Cycles
   679                           ; simple_byte           10     6 (average)
   680                           ; direct_byte           32     8 (fixed)
   681                           ; jumptable            260     6 (fixed)
   682                           ;	Chosen strategy is simple_byte
   683  0030  3A00               	xorlw	0	; case 0
   684  0031  1903               	skipnz
   685  0032  2817               	goto	l51
   686  0033  3A01               	xorlw	1	; case 1
   687  0034  1903               	skipnz
   688  0035  281D               	goto	l53
   689  0036  3A06               	xorlw	6	; case 7
   690  0037  1903               	skipnz
   691  0038  2823               	goto	l54
   692  0039  2829               	goto	l55
   693  003A                     l52:	
   694                           
   695                           ;Oscilador.c: 39: OSCCONbits.SCS = 1;
   696  003A  140F               	bsf	15,0	;volatile
   697  003B                     l56:	
   698  003B  0008               	return
   699  003C                     __end_of_initOsc:	
   700                           
   701                           	psect	text4
   702  0061                     __ptext4:	
   703 ;; *************** function _ISR *****************
   704 ;; Defined at:
   705 ;;		line 43 in file "main.c"
   706 ;; Parameters:    Size  Location     Type
   707 ;;		None
   708 ;; Auto vars:     Size  Location     Type
   709 ;;		None
   710 ;; Return value:  Size  Location     Type
   711 ;;                  1    wreg      void 
   712 ;; Registers used:
   713 ;;		wreg
   714 ;; Tracked objects:
   715 ;;		On entry : 0/0
   716 ;;		On exit  : 0/0
   717 ;;		Unchanged: 0/0
   718 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   719 ;;      Params:         0       0       0       0       0
   720 ;;      Locals:         0       0       0       0       0
   721 ;;      Temps:          2       0       0       0       0
   722 ;;      Totals:         2       0       0       0       0
   723 ;;Total ram usage:        2 bytes
   724 ;; Hardware stack levels used:    1
   725 ;; This function calls:
   726 ;;		Nothing
   727 ;; This function is called by:
   728 ;;		Interrupt level 1
   729 ;; This function uses a non-reentrant model
   730 ;;
   731                           
   732                           
   733                           ;psect for function _ISR
   734  0061                     _ISR:	
   735  0061                     i1l658:	
   736                           
   737                           ;main.c: 44: if (TMR0IF){
   738  0061  1D0B               	btfss	11,2	;volatile
   739  0062  2864               	goto	u1_21
   740  0063  2865               	goto	u1_20
   741  0064                     u1_21:	
   742  0064  2870               	goto	i1l30
   743  0065                     u1_20:	
   744  0065                     i1l660:	
   745                           
   746                           ;main.c: 46: TMR0IF = 0;
   747  0065  110B               	bcf	11,2	;volatile
   748  0066                     i1l662:	
   749                           
   750                           ;main.c: 47: TMR0 = 4;
   751  0066  3004               	movlw	4
   752  0067  1283               	bcf	3,5	;RP0=0, select bank0
   753  0068  1303               	bcf	3,6	;RP1=0, select bank0
   754  0069  0081               	movwf	1	;volatile
   755                           
   756                           ;main.c: 48: contador++;
   757  006A  3001               	movlw	1
   758  006B  07F4               	addwf	_contador,f
   759  006C  1803               	skipnc
   760  006D  0AF5               	incf	_contador+1,f
   761  006E  3000               	movlw	0
   762  006F  07F5               	addwf	_contador+1,f
   763  0070                     i1l30:	
   764  0070  0871               	movf	??_ISR+1,w
   765  0071  008A               	movwf	10
   766  0072  0E70               	swapf	??_ISR^(0+4294967168),w
   767  0073  0083               	movwf	3
   768  0074  0EFE               	swapf	btemp,f
   769  0075  0E7E               	swapf	btemp,w
   770  0076  0009               	retfie
   771  0077                     __end_of_ISR:	
   772  007E                     btemp	set	126	;btemp
   773  007E                     wtemp0	set	126
   774                           
   775                           	psect	intentry
   776  0004                     __pintentry:	
   777                           ;incstack = 0
   778                           ; Regs used in _ISR: [wreg]
   779                           
   780  0004                     interrupt_function:	
   781  007E                     saved_w	set	btemp
   782  0004  00FE               	movwf	btemp
   783  0005  0E03               	swapf	3,w
   784  0006  00F0               	movwf	??_ISR
   785  0007  080A               	movf	10,w
   786  0008  00F1               	movwf	??_ISR+1
   787  0009  120A  118A  2861   	ljmp	_ISR


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4       6
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_initOsc

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0      15
                                              3 COMMON     1     1      0
                            _initOsc
                          _initPorts
                           _initTMR0
 ---------------------------------------------------------------------------------
 (1) _initTMR0                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initPorts                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initOsc                                              1     1      0      15
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initOsc
   _initPorts
   _initTMR0

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      4       6       1       42.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       6       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       6      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Tue Jan 28 08:45:59 2020

             __CFG_CP$OFF 0000                        l42 008C                        l51 0017  
                      l52 003A                        l53 001D                        l45 0081  
                      l54 0023                        l55 0029                        l56 003B  
                      u20 0055                        u21 0054                       l652 002F  
                     l654 0082                       l670 004C                       l648 0016  
                     l656 0077                       l672 0055                       l664 003C  
                     l674 005B                       l666 0042                       l668 0047  
            __CFG_CPD$OFF 0000                       _ISR 0061              __CFG_LVP$OFF 0000  
                    ?_ISR 0070                      i1l30 0070                      _TMR0 0001  
                    u1_20 0065                      u1_21 0064              __CFG_WRT$OFF 0000  
                    _main 003C                      btemp 007E                      start 000C  
           __CFG_IESO$OFF 0000                     ??_ISR 0070                     ?_main 0070  
           __CFG_WDTE$OFF 0000                     _ANSEL 0188                     i1l660 0065  
                   i1l662 0066                     i1l658 0061                     _PORTB 0006  
                   _TRISB 0086            __CFG_FCMEN$OFF 0000           __end_of_initOsc 003C  
          __CFG_BOREN$OFF 0000                     pclath 000A                     status 0003  
                   wtemp0 007E            __CFG_MCLRE$OFF 0000           __initialization 000F  
            __end_of_main 0061                    ??_main 0073                    _ANSELH 0189  
                  _INTCON 000B               initOsc@frec 0072                    _TMR0IF 005A  
          __CFG_PWRTE$OFF 0000          __end_of_initTMR0 0082                 ??_initOsc 0072  
                  saved_w 007E   __end_of__initialization 0011            __pcstackCOMMON 0070  
      __size_of_initPorts 000B                __pmaintext 003C                __pintentry 0004  
               ?_initTMR0 0070                   __ptext1 0077                   __ptext2 0082  
                 __ptext3 0015                   __ptext4 0061              __size_of_ISR 0016  
       __end_of_initPorts 008D                   _initOsc 0015      end_of_initialization 0011  
              ??_initTMR0 0072       start_initialization 000F               __end_of_ISR 0077  
__CFG_FOSC$INTRC_NOCLKOUT 0000               __pbssCOMMON 0074                 ___latbits 0002  
       __size_of_initTMR0 000B                  ?_initOsc 0070                 _initPorts 0082  
       interrupt_function 0004                ?_initPorts 0070          __size_of_initOsc 0027  
       __CFG_BOR4V$BOR40V 0000                  _contador 0074                  _initTMR0 0077  
           __size_of_main 0025               ??_initPorts 0072                  intlevel1 0000  
              _OSCCONbits 008F                _OPTION_REG 0081  
