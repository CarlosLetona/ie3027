

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Jan 31 10:55:43 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	intentry,global,class=CODE,delta=2
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Version 2.10
    16                           ; Generated 31/07/2019 GMT
    17                           ; 
    18                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F887 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000D                     	;# 
    63  000E                     	;# 
    64  000E                     	;# 
    65  000F                     	;# 
    66  0010                     	;# 
    67  0011                     	;# 
    68  0012                     	;# 
    69  0013                     	;# 
    70  0014                     	;# 
    71  0015                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0017                     	;# 
    75  0018                     	;# 
    76  0019                     	;# 
    77  001A                     	;# 
    78  001B                     	;# 
    79  001B                     	;# 
    80  001C                     	;# 
    81  001D                     	;# 
    82  001E                     	;# 
    83  001F                     	;# 
    84  0081                     	;# 
    85  0085                     	;# 
    86  0086                     	;# 
    87  0087                     	;# 
    88  0088                     	;# 
    89  0089                     	;# 
    90  008C                     	;# 
    91  008D                     	;# 
    92  008E                     	;# 
    93  008F                     	;# 
    94  0090                     	;# 
    95  0091                     	;# 
    96  0092                     	;# 
    97  0093                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0094                     	;# 
   101  0095                     	;# 
   102  0096                     	;# 
   103  0097                     	;# 
   104  0098                     	;# 
   105  0099                     	;# 
   106  009A                     	;# 
   107  009B                     	;# 
   108  009C                     	;# 
   109  009D                     	;# 
   110  009E                     	;# 
   111  009F                     	;# 
   112  0105                     	;# 
   113  0107                     	;# 
   114  0108                     	;# 
   115  0109                     	;# 
   116  010C                     	;# 
   117  010C                     	;# 
   118  010D                     	;# 
   119  010E                     	;# 
   120  010F                     	;# 
   121  0185                     	;# 
   122  0187                     	;# 
   123  0188                     	;# 
   124  0189                     	;# 
   125  018C                     	;# 
   126  018D                     	;# 
   127  0000                     	;# 
   128  0001                     	;# 
   129  0002                     	;# 
   130  0003                     	;# 
   131  0004                     	;# 
   132  0005                     	;# 
   133  0006                     	;# 
   134  0007                     	;# 
   135  0008                     	;# 
   136  0009                     	;# 
   137  000A                     	;# 
   138  000B                     	;# 
   139  000C                     	;# 
   140  000D                     	;# 
   141  000E                     	;# 
   142  000E                     	;# 
   143  000F                     	;# 
   144  0010                     	;# 
   145  0011                     	;# 
   146  0012                     	;# 
   147  0013                     	;# 
   148  0014                     	;# 
   149  0015                     	;# 
   150  0015                     	;# 
   151  0016                     	;# 
   152  0017                     	;# 
   153  0018                     	;# 
   154  0019                     	;# 
   155  001A                     	;# 
   156  001B                     	;# 
   157  001B                     	;# 
   158  001C                     	;# 
   159  001D                     	;# 
   160  001E                     	;# 
   161  001F                     	;# 
   162  0081                     	;# 
   163  0085                     	;# 
   164  0086                     	;# 
   165  0087                     	;# 
   166  0088                     	;# 
   167  0089                     	;# 
   168  008C                     	;# 
   169  008D                     	;# 
   170  008E                     	;# 
   171  008F                     	;# 
   172  0090                     	;# 
   173  0091                     	;# 
   174  0092                     	;# 
   175  0093                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0094                     	;# 
   179  0095                     	;# 
   180  0096                     	;# 
   181  0097                     	;# 
   182  0098                     	;# 
   183  0099                     	;# 
   184  009A                     	;# 
   185  009B                     	;# 
   186  009C                     	;# 
   187  009D                     	;# 
   188  009E                     	;# 
   189  009F                     	;# 
   190  0105                     	;# 
   191  0107                     	;# 
   192  0108                     	;# 
   193  0109                     	;# 
   194  010C                     	;# 
   195  010C                     	;# 
   196  010D                     	;# 
   197  010E                     	;# 
   198  010F                     	;# 
   199  0185                     	;# 
   200  0187                     	;# 
   201  0188                     	;# 
   202  0189                     	;# 
   203  018C                     	;# 
   204  018D                     	;# 
   205  0000                     	;# 
   206  0001                     	;# 
   207  0002                     	;# 
   208  0003                     	;# 
   209  0004                     	;# 
   210  0005                     	;# 
   211  0006                     	;# 
   212  0007                     	;# 
   213  0008                     	;# 
   214  0009                     	;# 
   215  000A                     	;# 
   216  000B                     	;# 
   217  000C                     	;# 
   218  000D                     	;# 
   219  000E                     	;# 
   220  000E                     	;# 
   221  000F                     	;# 
   222  0010                     	;# 
   223  0011                     	;# 
   224  0012                     	;# 
   225  0013                     	;# 
   226  0014                     	;# 
   227  0015                     	;# 
   228  0015                     	;# 
   229  0016                     	;# 
   230  0017                     	;# 
   231  0018                     	;# 
   232  0019                     	;# 
   233  001A                     	;# 
   234  001B                     	;# 
   235  001B                     	;# 
   236  001C                     	;# 
   237  001D                     	;# 
   238  001E                     	;# 
   239  001F                     	;# 
   240  0081                     	;# 
   241  0085                     	;# 
   242  0086                     	;# 
   243  0087                     	;# 
   244  0088                     	;# 
   245  0089                     	;# 
   246  008C                     	;# 
   247  008D                     	;# 
   248  008E                     	;# 
   249  008F                     	;# 
   250  0090                     	;# 
   251  0091                     	;# 
   252  0092                     	;# 
   253  0093                     	;# 
   254  0093                     	;# 
   255  0093                     	;# 
   256  0094                     	;# 
   257  0095                     	;# 
   258  0096                     	;# 
   259  0097                     	;# 
   260  0098                     	;# 
   261  0099                     	;# 
   262  009A                     	;# 
   263  009B                     	;# 
   264  009C                     	;# 
   265  009D                     	;# 
   266  009E                     	;# 
   267  009F                     	;# 
   268  0105                     	;# 
   269  0107                     	;# 
   270  0108                     	;# 
   271  0109                     	;# 
   272  010C                     	;# 
   273  010C                     	;# 
   274  010D                     	;# 
   275  010E                     	;# 
   276  010F                     	;# 
   277  0185                     	;# 
   278  0187                     	;# 
   279  0188                     	;# 
   280  0189                     	;# 
   281  018C                     	;# 
   282  018D                     	;# 
   283  000B                     _INTCON	set	11
   284  0006                     _PORTB	set	6
   285  0001                     _TMR0	set	1
   286  005A                     _TMR0IF	set	90
   287  008F                     _OSCCONbits	set	143
   288  0081                     _OPTION_REG	set	129
   289  0086                     _TRISB	set	134
   290  0189                     _ANSELH	set	393
   291  0188                     _ANSEL	set	392
   292                           
   293                           ; #config settings
   294  0000                     
   295                           	psect	cinit
   296  000F                     start_initialization:	
   297  000F                     __initialization:	
   298                           
   299                           ; Clear objects allocated to COMMON
   300  000F  01F6               	clrf	__pbssCOMMON& (0+127)
   301  0010  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   302  0011                     end_of_initialization:	
   303                           ;End of C runtime variable initialization code
   304                           
   305  0011                     __end_of__initialization:	
   306  0011  0183               	clrf	3
   307  0012  120A  118A  2844   	ljmp	_main	;jump to C main() function
   308                           
   309                           	psect	bssCOMMON
   310  0076                     __pbssCOMMON:	
   311  0076                     _contador:	
   312  0076                     	ds	2
   313                           
   314                           	psect	cstackCOMMON
   315  0070                     __pcstackCOMMON:	
   316  0070                     ?_initOsc:	
   317  0070                     ?_initPorts:	
   318                           ; 1 bytes @ 0x0
   319                           
   320  0070                     ?_initTMR0:	
   321                           ; 1 bytes @ 0x0
   322                           
   323  0070                     ?_ISR:	
   324                           ; 1 bytes @ 0x0
   325                           
   326  0070                     ??_ISR:	
   327                           ; 1 bytes @ 0x0
   328                           
   329  0070                     ?_main:	
   330                           ; 1 bytes @ 0x0
   331                           
   332                           
   333                           ; 1 bytes @ 0x0
   334  0070                     	ds	2
   335  0072                     ??_initOsc:	
   336  0072                     ??_initPorts:	
   337                           ; 1 bytes @ 0x2
   338                           
   339  0072                     ??_initTMR0:	
   340                           ; 1 bytes @ 0x2
   341                           
   342                           
   343                           ; 1 bytes @ 0x2
   344  0072                     	ds	2
   345  0074                     initOsc@frec:	
   346                           
   347                           ; 1 bytes @ 0x4
   348  0074                     	ds	1
   349  0075                     ??_main:	
   350                           
   351                           ; 1 bytes @ 0x5
   352  0075                     	ds	1
   353                           
   354                           	psect	maintext
   355  0044                     __pmaintext:	
   356 ;;
   357 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   358 ;;
   359 ;; *************** function _main *****************
   360 ;; Defined at:
   361 ;;		line 56 in file "main.c"
   362 ;; Parameters:    Size  Location     Type
   363 ;;		None
   364 ;; Auto vars:     Size  Location     Type
   365 ;;		None
   366 ;; Return value:  Size  Location     Type
   367 ;;                  1    wreg      void 
   368 ;; Registers used:
   369 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   370 ;; Tracked objects:
   371 ;;		On entry : B00/0
   372 ;;		On exit  : 0/0
   373 ;;		Unchanged: 0/0
   374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   375 ;;      Params:         0       0       0       0       0
   376 ;;      Locals:         0       0       0       0       0
   377 ;;      Temps:          1       0       0       0       0
   378 ;;      Totals:         1       0       0       0       0
   379 ;;Total ram usage:        1 bytes
   380 ;; Hardware stack levels required when called:    2
   381 ;; This function calls:
   382 ;;		_initOsc
   383 ;;		_initPorts
   384 ;;		_initTMR0
   385 ;; This function is called by:
   386 ;;		Startup code after reset
   387 ;; This function uses a non-reentrant model
   388 ;;
   389                           
   390                           
   391                           ;psect for function _main
   392  0044                     _main:	
   393  0044                     l668:	
   394                           ;incstack = 0
   395                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   396                           
   397  0044  3007               	movlw	7
   398  0045  120A  118A  2015  120A  118A  	fcall	_initOsc
   399  004A                     l670:	
   400  004A  120A  118A  208A  120A  118A  	fcall	_initPorts
   401  004F                     l672:	
   402  004F  120A  118A  207F  120A  118A  	fcall	_initTMR0
   403  0054                     l674:	
   404  0054  3003               	movlw	3
   405  0055  0277               	subwf	_contador+1,w
   406  0056  30E8               	movlw	232
   407  0057  1903               	skipnz
   408  0058  0276               	subwf	_contador,w
   409  0059  1C03               	skipc
   410  005A  285C               	goto	u21
   411  005B  285D               	goto	u20
   412  005C                     u21:	
   413  005C  2854               	goto	l674
   414  005D                     u20:	
   415  005D                     l676:	
   416  005D  3001               	movlw	1
   417  005E  00F5               	movwf	??_main
   418  005F  0875               	movf	??_main,w
   419  0060  1283               	bcf	3,5	;RP0=0, select bank0
   420  0061  1303               	bcf	3,6	;RP1=0, select bank0
   421  0062  0786               	addwf	6,f	;volatile
   422  0063                     l678:	
   423  0063  01F6               	clrf	_contador
   424  0064  01F7               	clrf	_contador+1
   425  0065  2854               	goto	l674
   426  0066  120A  118A  280C   	ljmp	start
   427  0069                     __end_of_main:	
   428                           
   429                           	psect	text1
   430  007F                     __ptext1:	
   431 ;; *************** function _initTMR0 *****************
   432 ;; Defined at:
   433 ;;		line 82 in file "main.c"
   434 ;; Parameters:    Size  Location     Type
   435 ;;		None
   436 ;; Auto vars:     Size  Location     Type
   437 ;;		None
   438 ;; Return value:  Size  Location     Type
   439 ;;                  1    wreg      void 
   440 ;; Registers used:
   441 ;;		wreg
   442 ;; Tracked objects:
   443 ;;		On entry : 0/0
   444 ;;		On exit  : 0/0
   445 ;;		Unchanged: 0/0
   446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   447 ;;      Params:         0       0       0       0       0
   448 ;;      Locals:         0       0       0       0       0
   449 ;;      Temps:          0       0       0       0       0
   450 ;;      Totals:         0       0       0       0       0
   451 ;;Total ram usage:        0 bytes
   452 ;; Hardware stack levels used:    1
   453 ;; Hardware stack levels required when called:    1
   454 ;; This function calls:
   455 ;;		Nothing
   456 ;; This function is called by:
   457 ;;		_main
   458 ;; This function uses a non-reentrant model
   459 ;;
   460                           
   461                           
   462                           ;psect for function _initTMR0
   463  007F                     _initTMR0:	
   464  007F                     l660:	
   465                           ;incstack = 0
   466                           ; Regs used in _initTMR0: [wreg]
   467                           
   468  007F  3081               	movlw	129
   469  0080  1683               	bsf	3,5	;RP0=1, select bank1
   470  0081  1303               	bcf	3,6	;RP1=0, select bank1
   471  0082  0081               	movwf	1	;volatile
   472  0083  3004               	movlw	4
   473  0084  1283               	bcf	3,5	;RP0=0, select bank0
   474  0085  1303               	bcf	3,6	;RP1=0, select bank0
   475  0086  0081               	movwf	1	;volatile
   476  0087  30A0               	movlw	160
   477  0088  008B               	movwf	11	;volatile
   478  0089                     l45:	
   479  0089  0008               	return
   480  008A                     __end_of_initTMR0:	
   481                           
   482                           	psect	text2
   483  008A                     __ptext2:	
   484 ;; *************** function _initPorts *****************
   485 ;; Defined at:
   486 ;;		line 72 in file "main.c"
   487 ;; Parameters:    Size  Location     Type
   488 ;;		None
   489 ;; Auto vars:     Size  Location     Type
   490 ;;		None
   491 ;; Return value:  Size  Location     Type
   492 ;;                  1    wreg      void 
   493 ;; Registers used:
   494 ;;		status,2
   495 ;; Tracked objects:
   496 ;;		On entry : 0/0
   497 ;;		On exit  : 0/0
   498 ;;		Unchanged: 0/0
   499 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   500 ;;      Params:         0       0       0       0       0
   501 ;;      Locals:         0       0       0       0       0
   502 ;;      Temps:          0       0       0       0       0
   503 ;;      Totals:         0       0       0       0       0
   504 ;;Total ram usage:        0 bytes
   505 ;; Hardware stack levels used:    1
   506 ;; Hardware stack levels required when called:    1
   507 ;; This function calls:
   508 ;;		Nothing
   509 ;; This function is called by:
   510 ;;		_main
   511 ;; This function uses a non-reentrant model
   512 ;;
   513                           
   514                           
   515                           ;psect for function _initPorts
   516  008A                     _initPorts:	
   517  008A                     l658:	
   518                           ;incstack = 0
   519                           ; Regs used in _initPorts: [status,2]
   520                           
   521  008A  1683               	bsf	3,5	;RP0=1, select bank1
   522  008B  1303               	bcf	3,6	;RP1=0, select bank1
   523  008C  0186               	clrf	6	;volatile
   524  008D  1683               	bsf	3,5	;RP0=1, select bank3
   525  008E  1703               	bsf	3,6	;RP1=1, select bank3
   526  008F  0188               	clrf	8	;volatile
   527  0090  0189               	clrf	9	;volatile
   528  0091  1283               	bcf	3,5	;RP0=0, select bank0
   529  0092  1303               	bcf	3,6	;RP1=0, select bank0
   530  0093  0186               	clrf	6	;volatile
   531  0094                     l42:	
   532  0094  0008               	return
   533  0095                     __end_of_initPorts:	
   534                           
   535                           	psect	text3
   536  0015                     __ptext3:	
   537 ;; *************** function _initOsc *****************
   538 ;; Defined at:
   539 ;;		line 8 in file "Oscilador.c"
   540 ;; Parameters:    Size  Location     Type
   541 ;;  frec            1    wreg     unsigned char 
   542 ;; Auto vars:     Size  Location     Type
   543 ;;  frec            1    4[COMMON] unsigned char 
   544 ;; Return value:  Size  Location     Type
   545 ;;                  1    wreg      void 
   546 ;; Registers used:
   547 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   548 ;; Tracked objects:
   549 ;;		On entry : 0/0
   550 ;;		On exit  : 0/0
   551 ;;		Unchanged: 0/0
   552 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   553 ;;      Params:         0       0       0       0       0
   554 ;;      Locals:         1       0       0       0       0
   555 ;;      Temps:          2       0       0       0       0
   556 ;;      Totals:         3       0       0       0       0
   557 ;;Total ram usage:        3 bytes
   558 ;; Hardware stack levels used:    1
   559 ;; Hardware stack levels required when called:    1
   560 ;; This function calls:
   561 ;;		Nothing
   562 ;; This function is called by:
   563 ;;		_main
   564 ;; This function uses a non-reentrant model
   565 ;;
   566                           
   567                           
   568                           ;psect for function _initOsc
   569  0015                     _initOsc:	
   570                           
   571                           ;incstack = 0
   572                           ; Regs used in _initOsc: [wreg-fsr0h+status,2+status,0]
   573                           ;initOsc@frec stored from wreg
   574  0015  00F4               	movwf	initOsc@frec
   575  0016                     l648:	
   576                           
   577                           ;Oscilador.c: 9:     switch(frec){
   578  0016  282F               	goto	l652
   579  0017                     l51:	
   580                           ;Oscilador.c: 10:         case 0:
   581                           
   582                           
   583                           ;Oscilador.c: 11:             OSCCONbits.IRCF0 = 0;
   584  0017  1683               	bsf	3,5	;RP0=1, select bank1
   585  0018  1303               	bcf	3,6	;RP1=0, select bank1
   586  0019  120F               	bcf	15,4	;volatile
   587                           
   588                           ;Oscilador.c: 12:             OSCCONbits.IRCF1 = 0;
   589  001A  128F               	bcf	15,5	;volatile
   590                           
   591                           ;Oscilador.c: 13:             OSCCONbits.IRCF2 = 0;
   592  001B  130F               	bcf	15,6	;volatile
   593                           
   594                           ;Oscilador.c: 14:             break;
   595  001C  2842               	goto	l52
   596  001D                     l53:	
   597                           ;Oscilador.c: 15:         case 1:
   598                           
   599                           
   600                           ;Oscilador.c: 16:             OSCCONbits.IRCF0 = 1;
   601  001D  1683               	bsf	3,5	;RP0=1, select bank1
   602  001E  1303               	bcf	3,6	;RP1=0, select bank1
   603  001F  160F               	bsf	15,4	;volatile
   604                           
   605                           ;Oscilador.c: 17:             OSCCONbits.IRCF1 = 0;
   606  0020  128F               	bcf	15,5	;volatile
   607                           
   608                           ;Oscilador.c: 18:             OSCCONbits.IRCF2 = 0;
   609  0021  130F               	bcf	15,6	;volatile
   610                           
   611                           ;Oscilador.c: 19:             break;
   612  0022  2842               	goto	l52
   613  0023                     l54:	
   614                           ;Oscilador.c: 27:         case 7:
   615                           
   616                           
   617                           ;Oscilador.c: 28:             OSCCONbits.IRCF0 = 1;
   618  0023  1683               	bsf	3,5	;RP0=1, select bank1
   619  0024  1303               	bcf	3,6	;RP1=0, select bank1
   620  0025  160F               	bsf	15,4	;volatile
   621                           
   622                           ;Oscilador.c: 29:             OSCCONbits.IRCF1 = 1;
   623  0026  168F               	bsf	15,5	;volatile
   624                           
   625                           ;Oscilador.c: 30:             OSCCONbits.IRCF2 = 1;
   626  0027  170F               	bsf	15,6	;volatile
   627                           
   628                           ;Oscilador.c: 31:             break;
   629  0028  2842               	goto	l52
   630  0029                     l55:	
   631                           ;Oscilador.c: 32:         default:
   632                           
   633                           
   634                           ;Oscilador.c: 33:             OSCCONbits.IRCF0 = 0;
   635  0029  1683               	bsf	3,5	;RP0=1, select bank1
   636  002A  1303               	bcf	3,6	;RP1=0, select bank1
   637  002B  120F               	bcf	15,4	;volatile
   638                           
   639                           ;Oscilador.c: 34:             OSCCONbits.IRCF1 = 1;
   640  002C  168F               	bsf	15,5	;volatile
   641                           
   642                           ;Oscilador.c: 35:             OSCCONbits.IRCF2 = 1;
   643  002D  170F               	bsf	15,6	;volatile
   644                           
   645                           ;Oscilador.c: 36:             break;
   646  002E  2842               	goto	l52
   647  002F                     l652:	
   648  002F  0874               	movf	initOsc@frec,w
   649  0030  00F2               	movwf	??_initOsc
   650  0031  01F3               	clrf	??_initOsc+1
   651                           
   652                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   653                           ; Switch size 1, requested type "simple"
   654                           ; Number of cases is 1, Range of values is 0 to 0
   655                           ; switch strategies available:
   656                           ; Name         Instructions Cycles
   657                           ; simple_byte            4     3 (average)
   658                           ; direct_byte           11     8 (fixed)
   659                           ; jumptable            260     6 (fixed)
   660                           ;	Chosen strategy is simple_byte
   661  0032  0873               	movf	??_initOsc+1,w
   662  0033  3A00               	xorlw	0	; case 0
   663  0034  1903               	skipnz
   664  0035  2837               	goto	l700
   665  0036  2829               	goto	l55
   666  0037                     l700:	
   667                           
   668                           ; Switch size 1, requested type "simple"
   669                           ; Number of cases is 3, Range of values is 0 to 7
   670                           ; switch strategies available:
   671                           ; Name         Instructions Cycles
   672                           ; simple_byte           10     6 (average)
   673                           ; direct_byte           32     8 (fixed)
   674                           ; jumptable            260     6 (fixed)
   675                           ;	Chosen strategy is simple_byte
   676  0037  0872               	movf	??_initOsc,w
   677  0038  3A00               	xorlw	0	; case 0
   678  0039  1903               	skipnz
   679  003A  2817               	goto	l51
   680  003B  3A01               	xorlw	1	; case 1
   681  003C  1903               	skipnz
   682  003D  281D               	goto	l53
   683  003E  3A06               	xorlw	6	; case 7
   684  003F  1903               	skipnz
   685  0040  2823               	goto	l54
   686  0041  2829               	goto	l55
   687  0042                     l52:	
   688                           
   689                           ;Oscilador.c: 39:     OSCCONbits.SCS = 1;
   690  0042  140F               	bsf	15,0	;volatile
   691  0043                     l56:	
   692  0043  0008               	return
   693  0044                     __end_of_initOsc:	
   694                           
   695                           	psect	text4
   696  0069                     __ptext4:	
   697 ;; *************** function _ISR *****************
   698 ;; Defined at:
   699 ;;		line 44 in file "main.c"
   700 ;; Parameters:    Size  Location     Type
   701 ;;		None
   702 ;; Auto vars:     Size  Location     Type
   703 ;;		None
   704 ;; Return value:  Size  Location     Type
   705 ;;                  1    wreg      void 
   706 ;; Registers used:
   707 ;;		wreg
   708 ;; Tracked objects:
   709 ;;		On entry : 0/0
   710 ;;		On exit  : 0/0
   711 ;;		Unchanged: 0/0
   712 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   713 ;;      Params:         0       0       0       0       0
   714 ;;      Locals:         0       0       0       0       0
   715 ;;      Temps:          2       0       0       0       0
   716 ;;      Totals:         2       0       0       0       0
   717 ;;Total ram usage:        2 bytes
   718 ;; Hardware stack levels used:    1
   719 ;; This function calls:
   720 ;;		Nothing
   721 ;; This function is called by:
   722 ;;		Interrupt level 1
   723 ;; This function uses a non-reentrant model
   724 ;;
   725                           
   726                           
   727                           ;psect for function _ISR
   728  0069                     _ISR:	
   729  0069                     i1l662:	
   730                           
   731                           ;main.c: 45: }
   732  0069  1D0B               	btfss	11,2	;volatile
   733  006A  286C               	goto	u1_21
   734  006B  286D               	goto	u1_20
   735  006C                     u1_21:	
   736  006C  2878               	goto	i1l30
   737  006D                     u1_20:	
   738  006D                     i1l664:	
   739                           
   740                           ;main.c: 47: 
   741  006D  110B               	bcf	11,2	;volatile
   742  006E                     i1l666:	
   743                           
   744                           ;main.c: 48: 
   745  006E  3004               	movlw	4
   746  006F  1283               	bcf	3,5	;RP0=0, select bank0
   747  0070  1303               	bcf	3,6	;RP1=0, select bank0
   748  0071  0081               	movwf	1	;volatile
   749                           
   750                           ;main.c: 49: 
   751  0072  3001               	movlw	1
   752  0073  07F6               	addwf	_contador,f
   753  0074  1803               	skipnc
   754  0075  0AF7               	incf	_contador+1,f
   755  0076  3000               	movlw	0
   756  0077  07F7               	addwf	_contador+1,f
   757  0078                     i1l30:	
   758  0078  0871               	movf	??_ISR+1,w
   759  0079  008A               	movwf	10
   760  007A  0E70               	swapf	??_ISR^(0+4294967168),w
   761  007B  0083               	movwf	3
   762  007C  0EFE               	swapf	btemp,f
   763  007D  0E7E               	swapf	btemp,w
   764  007E  0009               	retfie
   765  007F                     __end_of_ISR:	
   766  007E                     btemp	set	126	;btemp
   767  007E                     wtemp0	set	126
   768                           
   769                           	psect	intentry
   770  0004                     __pintentry:	
   771                           ;incstack = 0
   772                           ; Regs used in _ISR: [wreg]
   773                           
   774  0004                     interrupt_function:	
   775  007E                     saved_w	set	btemp
   776  0004  00FE               	movwf	btemp
   777  0005  0E03               	swapf	3,w
   778  0006  00F0               	movwf	??_ISR
   779  0007  080A               	movf	10,w
   780  0008  00F1               	movwf	??_ISR+1
   781  0009  120A  118A  2869   	ljmp	_ISR


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       8
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_initOsc

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0      15
                                              5 COMMON     1     1      0
                            _initOsc
                          _initPorts
                           _initTMR0
 ---------------------------------------------------------------------------------
 (1) _initTMR0                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initPorts                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initOsc                                              3     3      0      15
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initOsc
   _initPorts
   _initTMR0

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       8       1       57.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       8       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       8      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Jan 31 10:55:43 2020

             __CFG_CP$OFF 0000                        l42 0094                        l51 0017  
                      l52 0042                        l53 001D                        l45 0089  
                      l54 0023                        l55 0029                        l56 0043  
                      u20 005D                        u21 005C                       l700 0037  
                     l652 002F                       l660 007F                       l670 004A  
                     l648 0016                       l672 004F                       l658 008A  
                     l674 0054                       l676 005D                       l668 0044  
                     l678 0063              __CFG_CPD$OFF 0000                       _ISR 0069  
            __CFG_LVP$OFF 0000                      ?_ISR 0070                      i1l30 0078  
                    _TMR0 0001                      u1_20 006D                      u1_21 006C  
            __CFG_WRT$OFF 0000                      _main 0044                      btemp 007E  
                    start 000C             __CFG_IESO$OFF 0000                     ??_ISR 0070  
                   ?_main 0070             __CFG_WDTE$OFF 0000                     _ANSEL 0188  
                   i1l662 0069                     i1l664 006D                     i1l666 006E  
                   _PORTB 0006                     _TRISB 0086            __CFG_FCMEN$OFF 0000  
         __end_of_initOsc 0044            __CFG_BOREN$OFF 0000                     pclath 000A  
                   status 0003                     wtemp0 007E            __CFG_MCLRE$OFF 0000  
         __initialization 000F              __end_of_main 0069                    ??_main 0075  
                  _ANSELH 0189                    _INTCON 000B               initOsc@frec 0074  
                  _TMR0IF 005A            __CFG_PWRTE$OFF 0000          __end_of_initTMR0 008A  
               ??_initOsc 0072                    saved_w 007E   __end_of__initialization 0011  
          __pcstackCOMMON 0070        __size_of_initPorts 000B                __pmaintext 0044  
              __pintentry 0004                 ?_initTMR0 0070                   __ptext1 007F  
                 __ptext2 008A                   __ptext3 0015                   __ptext4 0069  
            __size_of_ISR 0016         __end_of_initPorts 0095                   _initOsc 0015  
    end_of_initialization 0011                ??_initTMR0 0072       start_initialization 000F  
             __end_of_ISR 007F  __CFG_FOSC$INTRC_NOCLKOUT 0000               __pbssCOMMON 0076  
               ___latbits 0002         __size_of_initTMR0 000B                  ?_initOsc 0070  
               _initPorts 008A         interrupt_function 0004                ?_initPorts 0070  
        __size_of_initOsc 002F         __CFG_BOR4V$BOR40V 0000                  _contador 0076  
                _initTMR0 007F             __size_of_main 0025               ??_initPorts 0072  
                intlevel1 0000                _OSCCONbits 008F                _OPTION_REG 0081  
